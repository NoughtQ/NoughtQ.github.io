<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>浅谈提示工程</title>
      <link href="/posts/38c22287.html"/>
      <url>/posts/38c22287.html</url>
      
        <content type="html"><![CDATA[<div class="note blue icon-padding flat"><i class="note-icon fas fa-pencil"></i><p><span class="fakeTitle">引入</span><br>虽然用了不少时间的 LLM，但是我从来没有花时间研究过如何写好提示词，都是想到什么就输入什么，从不在意提示词的质量。对于一般场景，我们的输入随意一些并不会特别影响 LLM 的输出结果；而且随着技术的不断改进，只要简单讲几句，LLM 就能参透我们的意思。然而，如果要求 LLM 完成一些复杂的任务，那么只是简单地提一些要求，LLM 就无法按照我们预期所想的那样解决问题，总会在某些地方出岔子。这个时候，也许有些人就会红温，不仅抱怨道：“大模型怎么这么蠢啊！”——也许这不是因为 LLM 不够聪明，而是我们人类没有发挥出 LLM 的真正能力。</p><p>最近科研项目那边分配给我的任务是修改原有的提示词，以提高程序生成可视化数据的成功率。由于我是第一次做这个任务，所以在这个过程中遇到了不少问题，自以为修改后的提示词考虑的更全面，但是实际跑下来的成功率一跌再跌，很令我沮丧。所以我认为很有必要学习<strong>提示工程</strong>(prompt engineering)相关的知识，希望能利用这些知识写出高质量的提示词，少走一些弯路。</p><p>如果你和我一样是提示工程方面的小白的话，那么希望这篇文章对你有所帮助；如果你是经验丰富的提示工程师的话，那就敬请不吝赐教~</p></div><h2 id="提示工程">提示工程</h2><h3 id="提示词">提示词</h3><p>在了解提示工程之前，首先要知道“<strong>提示词</strong>”(prompt)是什么。简单来说，它是<u>为模型提供的输入，引导 AI 模型来生成特定的输出</u>。</p><p>不过，从更本质的层面来看提示词的话，我十分赞同李继刚老师的观点：提示词的本质并非沟通，而是<strong>表达</strong>；而表达是让符号产生意义的活动。《关于说话的一切》这本书将「表达」拆解为三个核心部分：</p><ul><li><strong>本意</strong>：存在于脑海中的想法、模糊概念或方法论，这是表达中最根本的部分。本意的三要素为：<ul><li>切身真实的<strong>经验</strong></li><li><strong>词汇</strong>与经验的映射关系</li><li>对<strong>原理</strong>的理解</li></ul></li><li><strong>文意</strong>：用恰当的语言符号表达脑海中的想法，这是表达中唯一能被我们直接修正的部分。</li><li><strong>解意</strong>：对方接收自己的本意并转化为文字表达式，会在大脑中进行“解压缩”，试图理解文字背后的意思。本意与解意之间的差异，正是误解产生的源头，也是为什么有时候给大模型提示词后，它无法按预期回答的原因。</li></ul><h3 id="提示工程-2">提示工程</h3><p>而<strong>提示工程</strong>就是一种通过设计和调整输入（提示词）来改善模型性能或控制器输出结果的技术。提示词的好坏可能让模型的回答质量有着天壤之别，因此为了获得理想的模型结果，我们需要不断调整、设计好的提示词，这就是提示工程要做的事。</p><div class="note warning flat"><p><span class="fakeTitle">误区警告</span><br>很多人会认为，提示词指的就是<strong>用户的输入</strong>——这是常见的误区。实际上，提示词的输入不仅包含用户的输入，还有其他来源，比如<strong>预设的提示词</strong>，甚至<strong>模型自己的输出</strong>都是提示词的一部分。</p></div><p>简言之，<strong>所有会被模型用于预测输出结果的内容，都是提示词</strong>。</p><h3 id="重要性">重要性</h3><p>提示工程很重要。</p><ul><li><p>提示词是调用大模型能力的<strong>接口</strong>，是<u>用好</u>大模型能力的核心</p></li><li><p>在 LLM 应用的开发和性能优化的过程中，提示工程贯穿始终</p>  <div style="text-align: center">      <img src="../img/prompt/1.png" width="90%">  </div><ul><li>一切 LLM 应用推荐先从提示工程着手建立原型，作为<strong>性能优化的基石</strong></li><li>若提示工程无法满足需求，再分析性能瓶颈的原因，采取进一步策略</li><li>比如通过 <strong>RAG</strong>（检索增强生成）构造更好的模型输入，所以 RAG 本质上也是一种提示工程</li><li>若要使用<strong>微调</strong>(fine-tuning)，通过提示工程构造高质量的微调数据也是微调成功的关键</li><li>模型性能提升后，数据质量进一步提升，将更优质的数据用于模型训练，然后更好的模型产出更好的数据，如此构建正向迭代循环（也称<strong>数据飞轮</strong>），其中每个环节都离不开好的提示工程</li></ul></li></ul><h2 id="如何写好提示词">如何写好提示词</h2><h3 id="六大原则">六大原则</h3><p>OpenAI 官方的提示工程文档总结了六大原则（或者说最佳实践），并提供了一些可行策略，个人觉得总结得相当清晰全面，有很好的借鉴意义。下面给出提炼后的一些文字，如果不清楚其背后意思的话，强烈建议阅读<a href="https://platform.openai.com/docs/guides/prompt-engineering#tactic-evaluate-model-outputs-with-reference-to-gold-standard-answers">原文</a>，里面还给出相应的例子。</p><div class="note icon-padding flat"><i class="note-icon fas fa-circle-info"></i><p><span class="fakeTitle">阅读前须知</span><br>下面提到的例子中会涉及到三种不同的角色：</p><ul><li>USER：用户，即发起对话的一方，提出问题或请求，期望从模型获得回答或帮助。</li><li>ASSISTANT：就是模型，负责理解用户的输入并生成相应的回答。</li><li>SYSTEM：系统级的消息或通知。例如在一个特定应用中，若需要告知用户某项功能的变化或提供某些知道，那么可能会使用这一标签。但在一般的模型对话中，这一角色并不常见。</li></ul><p>另外，以下的六个原则是按照从易到难的顺序排列的，所以建议各位在实践过程中，可以先尝试着遵循前面的原则和策略，熟练掌握之后再学习后面的原则和策略，以达到循序渐进的效果。</p></div><ol><li><strong>编写清晰的指令</strong>(Write clear instructions)</li></ol><ul><li>在查询中<strong>包含详细信息</strong>（任何重要的细节以及上下文），以获得更相关的答案，这样可以减少模型的猜测和误解，从而提高交互效率和满意度。</li><li>要求模型<strong>扮演某个角色</strong>，这样模型会根据角色特性来作答，使回答根据特色和针对性，因此输出质量得以提升。</li><li>使用<strong>分隔符</strong>（比如三重引号<code>&quot;&quot;&quot;</code>、XML标记<code>&lt;xxx&gt;</code>、节标题等等）清晰地表示输入的不同部分，这为模型理解复杂任务带来便利，也能减少模型的猜测和误解。</li><li>指定完成任务所需的<strong>步骤</strong>，使模型更容易 follow 你的意思。</li><li>提供<strong>实例</strong>。通常的话提供一般性的说明可能更有用，但是当模型需要复制一种难以明确描述的用户查询相应风格时，提供实例可能更容易，这样的提示称为 <strong>“few-shot”</strong> 提示。</li><li>指定输出的期望长度，比如指定词数、句子数、段落数等等。<ul><li>但是通常情况下模型很难生成指定数量的单词（原因很多，比如模型以 token 为单位生成文本等等），所以最好指定一个较为宽泛的词数范围</li></ul></li></ul><ol start="2"><li><p><strong>提供参考文本</strong>(Provide reference text)</p> <div class="note red icon-padding flat"><i class="note-icon fas fa-bug"></i><p><span class="fakeTitle">Bug</span><br>很多模型会很自信地编造假答案，特别是当被询问奇特的话题、引用和网址时（这种现象称为模型的“<strong>幻觉</strong>”(hallucination)）。</p><p><strong>个人经历</strong>：寒假的时候，我让 ds 给我推荐一些参考论文，它大概列出了七八篇论文，并给出对应的链接，结果只有一两个链接是打得开的。然后我用 Google 搜了一下这些打不开的论文，发现并不存在这些论文；而且那些有正确链接的论文，不论是标题还是正文内容都与它介绍的有所出入。然后我就和 ds battle 了一阵子，但它还是坚持己见，不仅保持原有的错误链接，还给我推荐了一些其他带错误链接的论文——真的很无语…</p></div></li></ol><ul><li>指示模型使用<strong>参考文本</strong>（与当前查询相关的可信信息）进行回答，这样可以减少模型过分自由发挥的可能性</li><li>指示模型使用<strong>参考文本的引文</strong>进行回答，这样可以检验模型是否能从参考文本中正确找到答案</li></ul><ol start="3"><li><strong>将复杂的任务拆分成子任务</strong>(Split complex tasks into simpler substasks)</li></ol><ul><li>使用<strong>意图分类</strong>来识别用户查询的最相关指令。<ul><li>当处理不同情况的任务时，可以先将任务按类型分类，然后为每种类型设计特定的步骤。复杂任务可以分解成小阶段，每个阶段也有自己的指令，这样整个处理过程更有组织和效率。</li><li>优点：每次查询仅包含执行任务某个阶段所需的指令，因此相比通过单次查询来完成整个任务的错误率更低，而且也可以降低 API 成本</li></ul></li><li>对于需要非常长对话的对话应用程序，<strong>总结</strong>或<strong>过滤</strong>以前的对话。<ul><li>由于模型只能记住固定长度的上下文，因此对话不能无限地进行下去</li><li>解决方案：<ul><li>对前几轮对话进行<strong>总结</strong>。可以让系统在输入对话达到一定长度时自动触发一个查询，让模型总结前面的会话，将总结作为系统回复的一部分。或者也可以在整个对话过程中，把前面的对话内容分批次进行总结</li><li>根据当前查询，选择前面对话中最相关的部分（<strong>过滤</strong>）</li></ul></li></ul></li><li><strong>逐段总结</strong>长文档并递归构建完整概要。<ul><li>每个段落可以作为一个查询来总结，然后这些段落的总结再连接在一起，形成整体的总结。这个过程可以重复进行，直到对整段文本进行总结。</li><li>如果后面的内容需要前面的内容作为背景才能理解，那么在总结后面部分的时候，可以在查询中包含之前已经总结过的内容，这样可以帮助模型更好地理解整个文档。</li></ul></li></ul><ol start="4"><li><strong>给 GPT “思考”实践（给出过程）</strong>(Give the model time to “think”)</li></ol><ul><li>指示模型在得出结论之前<strong>自行解决问题</strong>。有时候，我们明确地指导模型在得出结论之前先进行从头至尾的推理，会得到更好的结果。<ul><li>举例：比如让模型批改学生作业（包括其他解决<strong>复杂的计算问题</strong>的情景），它有可能被学生的错误思路带偏了，从而认为学生的错误答案是正确的。这时可以让模型先生成自己的解答，这样的话它更容易发现学生回答的错误之处。</li></ul></li><li>使用<strong>内心独白</strong>或一系列的查询来隐藏模型的推理过程。<ul><li>因为有的时候，模型的推理过程不适合于用户分享，比如在辅导应用程序中，我们可能希望鼓励学生自己找出答案，但是模型对学生解答的推理过程可能会向学生透露答案。</li><li>这种情况比较少见，所以我就不展开介绍了（反倒是现在很多模型都提供了推理/深度思考的功能）</li></ul></li><li>询问模型是否在之前的处理中遗漏了任何内容，即<strong>自我检查</strong>。<ul><li>还是因为模型能够阅读的上下文有限，所以很容易遗忘之前的内容。因此建议在大量文本输入的情况下，让模型进行自己检查，可以帮助我们收获更加准确的答案</li></ul></li></ul><ol start="5"><li><strong>使用外部工具</strong>(Use external tools)</li></ol><ul><li><p>使用<strong>基于嵌入的搜索</strong>来实现高效的知识检索。</p><ul><li>目前几乎所有主流大模型都有类似“<strong>联网搜索</strong>”的功能，所以现在这条策略的实现相当简单（以前的话可能还需要自己嵌入文本，甚至需要封装成一个 API 或函数实现）</li></ul></li><li><p>使用<strong>代码</strong>执行来执行更准确的计算或<strong>调用外部 API</strong>。</p><ul><li>我们不能依赖GPT自己精确地进行算术或长时间的计算（个人经验：通常让模型帮我们计算一些东西，哪怕计算量再小，它可能也不高兴帮你算，而是给你代码）</li><li>在需要的情况下，可以指导模型编写和运行代码，而不是自己进行计算。特别是，可以指导模型将要运行的代码放入<strong>特定格式</strong>，如三重反引号。在产生输出后，可以提取并运行代码。</li><li>如有必要，可以将代码执行引擎（如 Python 解释器）的输出作为模型下一次查询的输入。</li></ul><div class="note purple icon-padding flat"><i class="note-icon fas fa-list"></i><p><span class="fakeTitle">例子</span><br>用 ChatGPT 计算调和级数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mo>+</mo><mo>⋯</mo><mo>+</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><mn>100</mn></mfrac></mstyle></mrow><annotation encoding="application/x-tex">1 + \dfrac{1}{2} + \dots + \dfrac{1}{100}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">100</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><div style="text-align: center, margin-bottom: 10px">    <img src="../img/prompt/2.png" width="100%"></div><div style="text-align: center">    <img src="../img/prompt/3.png" width="70%"></div><blockquote><p>Deepseek 貌似没法用 Python 解释器…</p></blockquote></div></li></ul><ol start="6"><li><strong>测试的系统性变化</strong>(Test changes systematically)</li></ol><ul><li><p>使用参考标准答案评估模型输出。评估程序对优化系统设计很有帮助。良好的评估具有以下特性：</p><ul><li><p>贴近用户的使用场景（至少多样化）</p></li><li><p>包含大量测试用例，以覆盖更大的统计范围，具体可参考下表：</p><table><thead><tr><th style="text-align:left">检测到的差异</th><th style="text-align:left">95%置信度所需的样本大小</th></tr></thead><tbody><tr><td style="text-align:left">30%</td><td style="text-align:left">~10</td></tr><tr><td style="text-align:left">10%</td><td style="text-align:left">~100</td></tr><tr><td style="text-align:left">3%</td><td style="text-align:left">~1,000</td></tr><tr><td style="text-align:left">1%</td><td style="text-align:left">~10,000</td></tr></tbody></table></li><li><p>易于自动化</p></li></ul></li><li><p>输出的评估可以由<strong>计算机、人或两者配合</strong>来完成的。</p></li><li><p>计算机可以使用<strong>固定标准</strong>以及某些<strong>主观或模糊的标准自动化评估方式</strong>，其中模型的输出结果会由另外一个测试程序进行评估结果的正确性。</p></li><li><p>个人感觉这个原则可能在<strong>科研</strong>过程中用的比较多，我自己就是跟着负责评估方法搭建的学长干活（<s>虽然我的任务与评估没有直接的关系</s>），也看了一些相关的论文（比如 VisEval 就是一个 LLM + 可视化的评估框架，它相比一般的大模型能有效提升可视化图像的生成质量），所以对此深有感触。</p></li></ul><h3 id="提示词方法论">提示词方法论</h3><p>现在有各种各样的提示词框架，帮助我们写好提示词，其中我比较推荐 <strong>LangGPT</strong>（中文名为“<strong>结构化提示词</strong>”）这一提示词方法论。用这种方法论写出来的提示词大概长这个样子：</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section"># Role: 产品营销文案生成助手  </span></span><br><span class="line"></span><br><span class="line"><span class="section">## Profile  </span></span><br><span class="line"><span class="bullet">-</span> author: LangGPT  </span><br><span class="line"><span class="bullet">-</span> version: 1.0  </span><br><span class="line"><span class="bullet">-</span> language: 中文  </span><br><span class="line"><span class="bullet">-</span> description: 你是一个专业的营销文案撰写助手，擅长为不同产品撰写高转化率的营销文案，风格可以根据目标受众调整。  </span><br><span class="line"></span><br><span class="line"><span class="section">## Skills  </span></span><br><span class="line"><span class="bullet">1.</span> 分析目标市场，理解用户痛点与需求。  </span><br><span class="line"><span class="bullet">2.</span> 结合产品特点，生成吸引人的文案。  </span><br><span class="line"><span class="bullet">3.</span> 使用说服性语言，引导用户采取行动。  </span><br><span class="line"><span class="bullet">4.</span> 根据不同平台（社交媒体、电商平台、广告投放等）优化文案格式和风格。  </span><br><span class="line"></span><br><span class="line"><span class="section">## Rules  </span></span><br><span class="line"><span class="bullet">1.</span> 突出产品的核心卖点和独特价值。  </span><br><span class="line"><span class="bullet">2.</span> 使用清晰、有吸引力的标题。  </span><br><span class="line"><span class="bullet">3.</span> 采用情感驱动的语言，增加用户共鸣。  </span><br><span class="line"><span class="bullet">4.</span> 结尾包含清晰的行动号召（CTA），如“立即购买”或“免费试用”。  </span><br><span class="line"></span><br><span class="line"><span class="section">## Workflows  </span></span><br><span class="line"><span class="bullet">1.</span> 识别目标受众（年龄、性别、兴趣等）。  </span><br><span class="line"><span class="bullet">2.</span> 分析产品特点，找出独特卖点。  </span><br><span class="line"><span class="bullet">3.</span> 生成三种不同风格的文案（正式、幽默、情感共鸣）。  </span><br><span class="line"><span class="bullet">4.</span> 选择最优文案，并进行优化调整。  </span><br><span class="line"></span><br><span class="line"><span class="section">## 示例输入  </span></span><br><span class="line">产品：智能护眼台灯  </span><br><span class="line">目标受众：大学生、办公族  </span><br><span class="line">平台：淘宝电商  </span><br><span class="line"></span><br><span class="line"><span class="section">## 示例输出  </span></span><br><span class="line">✨ <span class="strong">**标题**</span>: “智能护眼台灯，呵护双眼，提升专注力！”  </span><br><span class="line">📌 <span class="strong">**产品亮点**</span>: 5档亮度调节、自然光模拟、长时间使用不刺眼。  </span><br><span class="line">💡 <span class="strong">**核心文案**</span>:  </span><br><span class="line"><span class="quote">&gt; 长时间用眼让你眼睛疲劳？这款智能护眼台灯采用 <span class="strong">**无蓝光危害技术**</span>，模拟自然光线，让你的眼睛更轻松。适用于 <span class="strong">**学习、办公、阅读**</span>，为你的每一次专注护航！  </span></span><br><span class="line">🔥 <span class="strong">**限时优惠**</span>：今日下单立减30元！点击购买👉【链接】  </span><br></pre></td></tr></table></figure><p>这种提示词具备以下优势：</p><ul><li><p><strong>层级结构</strong>，具有更好的可读性和表达性。</p><ul><li>结构化提示词一般会用到以下属性词，此外用户也可以自定义其他层级以满足需求。<ul><li>Role</li><li>Profile、Rules</li><li>Language、Description</li></ul></li><li>丰富的层次结构也<strong>符合人类的表达习惯</strong>，与我们日常写文章时有标题、段落、副标题、子段落等丰富的层级结构是一样的，而大模型也正是在大量的文章、书籍中训练得到，因而这样的提示词也符合大模型的认知习惯。</li></ul></li><li><p>提升人和大模型对提示词的<strong>语义认知</strong></p><ul><li>人：提示词内容一目了然，语义清晰，只需依样画瓢写提示词就 OK 了；对于复杂情景，可能需要多次迭代优化，但是编写提示词的任务量不会很大。</li><li>大模型：结构化提示词起到了聚拢相同语义、梳理和归纳语义的作用，缓解了提示词中不当内容的干扰，便于模型理解提示词的语义。</li></ul></li><li><p>使用特定的<strong>属性词</strong>定向唤醒大模型的<strong>深层能力</strong></p><ul><li><p>实践发现，角色扮演能提升大模型在某一领域的表现。</p></li><li><p>为大模型设定规则，以缓解大模型幻觉的问题。</p></li><li><p>提示词中可能会用到的一些属性词：</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section"># Role: 设置角色名称，一级标题，作用范围为全局</span></span><br><span class="line"></span><br><span class="line"><span class="section">## Profile: 设置角色简介，二级标题，作用范围为段落</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Author: yzfly    设置 Prompt 作者名，保护 Prompt 原作权益</span><br><span class="line"><span class="bullet">-</span> Version: 1.0     设置 Prompt 版本号，记录迭代版本</span><br><span class="line"><span class="bullet">-</span> Language: 中文   设置语言，中文还是 English</span><br><span class="line"><span class="bullet">-</span> Description:     一两句话简要描述角色设定，背景，技能等</span><br><span class="line"></span><br><span class="line"><span class="section">### Skill:  设置技能，下面分点仔细描述</span></span><br><span class="line"><span class="bullet">1.</span> xxx</span><br><span class="line"><span class="bullet">2.</span> xxx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## Rules        设置规则，下面分点描述细节</span></span><br><span class="line"><span class="bullet">1.</span> xxx</span><br><span class="line"><span class="bullet">2.</span> xxx</span><br><span class="line"></span><br><span class="line"><span class="section">## Workflow     设置工作流程，如何和用户交流，交互</span></span><br><span class="line"><span class="bullet">1.</span> 让用户以 &quot;形式：[], 主题：[]&quot; 的方式指定诗歌形式，主题。</span><br><span class="line"><span class="bullet">2.</span> 针对用户给定的主题，创作诗歌，包括题目和诗句。</span><br><span class="line"></span><br><span class="line"><span class="section">## Initialization  设置初始化步骤，强调 prompt 各内容之间的作用和联系，定义初始化行为。</span></span><br><span class="line">作为角色 <span class="language-xml"><span class="tag">&lt;<span class="name">Role</span>&gt;</span></span>, 严格遵守 <span class="language-xml"><span class="tag">&lt;<span class="name">Rules</span>&gt;</span></span>, 使用默认 <span class="language-xml"><span class="tag">&lt;<span class="name">Language</span>&gt;</span></span> 与用户对话，友好的欢迎用户。然后介绍自己，并告诉用户 <span class="language-xml"><span class="tag">&lt;<span class="name">Workflow</span>&gt;</span></span>。</span><br></pre></td></tr></table></figure></li></ul></li><li><p>像<strong>代码</strong>开发一样构建生产级的提示词</p><ul><li>代码和提示词有一定相似之处：<strong>代码</strong>是调用<strong>机器</strong>能力的工具，而<strong>提示词</strong>是调用<strong>大模型</strong>能力的工具，所以提示词越来越像新时代的编程语言。</li><li>结构化提示词的规范和模块化设计，能够大大为后续的提示词<strong>维护升级</strong>，以及<strong>多人协同开发设计</strong>带来便利。</li><li>结构化提示词还能提高提示词的<strong>复用</strong>能力，比如某些提示词的规则如果能适用于其他情景，那就无需重复造轮子，直接套用就行了。</li><li>甚至可以使用 Git 等工具像管理代码一样对 prompt 进行版本管理。</li></ul></li></ul><p>那么我们该如何构建这样的提示词呢？结构化提示词的作者给出了以下建议：</p><ul><li><p>构建<strong>全局思维链</strong>。LangGPT 的思维链如下所示：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Role (角色) -&gt; Profile（角色简介）—&gt; Profile 下的 skill (角色技能) -&gt; Rules (角色要遵守的规则) -&gt; Workflow (满足上述条件的角色的工作流程) -&gt; Initialization (进行正式开始工作的初始化准备) -&gt; 开始实际使用</span><br></pre></td></tr></table></figure><ul><li>一个好的提示词，内容结构上最好也是<strong>逻辑清晰连贯</strong>的。结构化提示词方法将久经考验的逻辑思维链路融入了结构中，大大降低了思维链路的构建难度。</li><li>自己写提示词时，不妨<strong>参考优质模板</strong>的全局思维链路，熟练掌握后，完全可以对其进行增删改留调整，得到一个适合自己使用的模板。</li></ul></li><li><p>保持上下文<strong>语义一致性</strong></p><ul><li><strong>格式</strong>语义一致性：<strong>标识符</strong>的标识功能前后一致，最好不用混用。比如 <code>#</code> 既作为 Markdown 的标题，又作为 Python 的注释，可能会造成行为的前后不一致，对模型理解提示词结构产生干扰。</li><li><strong>内容</strong>语义一致性：思维链路上的<strong>属性词</strong>语义合适，并且和相应模块内容的语义一致。比如 <code>Rules</code> 属性词处应该描述模型需要遵守的规则，而不应该描述具体要做什么事。</li></ul></li><li><p>有机结合<strong>其他提示词技巧</strong>：我们不必局限于结构化提示词这一种方法论，还可以兼收并蓄，吸收其他提示词方法的长处，从而构建更为强大的高质量提示词。</p></li></ul><hr><p>当然，这种方法也有一定的局限性：</p><ul><li><strong>大模型自身的问题</strong>无法通过提示词来彻底解决，比如幻觉、指示老旧、数学推理能力弱等</li><li>相同的提示词在<strong>不同模型</strong>中的表现不同</li><li>我在科研过程中（我们的项目里用到的提示词就类似这种结构化提示词）认识到的一个问题：正如这种方法论的名称，由于过于结构化，有时可能会过分限制大模型的发挥，僵化其思维，从而无法得到理想的结果。这就好比让你写一篇八股文，即使写得再精彩，也无法到达优秀散文的境界。</li></ul><h2 id="总结">总结</h2><p>由于时间有限，我对提示工程的了解仅限于此，所以分享也就告一段落了（<s>有些戛然而止的感觉</s>）。正如标题所言，我的这篇分享仅仅是对我阅读过的一些提示工程教程的一些汇总，外加到目前为止我自己的一些经历和粗浅的感受，所以说不上是对提示工程的系统性学习，但是也足以让各位读者对这一领域有一个大致的模糊的认识。我想今后几年内，LLM 依旧会是 AI 界的浪潮之巅，所以提示工程这门技术的重要性不言而喻。随着经验的积累，我想将来会对提示工程有着更深的了解，到时候再来 refine 这篇分享~</p><p>最后用一句话结束今天的分享：Prompt is All You Need!</p><h2 id="参考资料">参考资料</h2><ul><li><a href="https://github.com/langgptai/LangGPT">开源仓库：LangGPT</a></li><li><a href="https://langgptai.feishu.cn/wiki/VXmowI2boiqVFVkj9vlcNkhNnce">云中江树 | LangGPT 社区年度分享：AI 交流的艺术</a></li><li><a href="https://langgptai.feishu.cn/wiki/IpdUwZRzgiYYH7kuOsDc3fWrnkg?fromScene=spaceOverview">熊猫Jay | 万字解读 ChatGPT 提示词最佳案例</a></li><li><a href="https://langgptai.feishu.cn/wiki/ASXOwDbTEiH9CUkXFA5cLHumn88">云中江树 | 结构化提示词系统论述： 构建高性能 Prompt 之路</a></li><li><a href="https://langgptai.feishu.cn/wiki/AYMWwBPaSih46WkAo9jcfKkfntg">李继刚 | 提示词的道和术</a></li><li><a href="https://platform.openai.com/docs/guides/prompt-engineering">OpenAI | Prompt engineering</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> CS 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> LLM </tag>
            
            <tag> Prompt Engineering </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大二秋冬 课程回忆录</title>
      <link href="/posts/65e331c3.html"/>
      <url>/posts/65e331c3.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>这个学期我修了三十多学分的课程，但实际上我并没有感觉有多大的压力，一方面是因为我这个学期也没干什么事情，另一方面是因为我从这个学期开始，基本上都以<strong>自学</strong>的方式学习，几乎把所有的课都当做了自修课，留给我学习的时间还是挺充裕的，所以对于大部分的课程我都留下了笔记（可以来<a href="https://note.noughtq.top/">我的笔记网站</a>逛逛！）。</p><p>本来想着全部出分后马上分享我的课程经验，但是迫于现实的各种阻力（做了手术 + 术后马上就要干活了），一直拖到现在才完成总结，这超出我的预期。由于隔了一段时间了，有些记忆可能模糊或混乱了，所以文章内可能会出现一些错误，若8u发现的话请狠狠指出~</p><p>前排推销我的资源~</p><ul><li><a href="https://note.noughtq.top">笔记</a>（涵盖了下面介绍的多数课程的笔记）</li><li><a href="https://blog.noughtq.top">博客</a>（收录了这篇经验帖，阅读体验更佳）</li><li><a href="https://github.com/NoughtQ/ZJU-Courses-Resources">课程资源库</a></li></ul><h2 id="目录">目录</h2><ul><li><a href="#%E6%95%B0%E7%90%86%E5%9F%BA%E7%A1%80%E8%AF%BE">数理基础课</a><ul><li><a href="#%E6%A6%82%E7%8E%87%E8%AE%BA%E4%B8%8E%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1">概率论与数理统计</a></li><li><a href="#%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%86%E4%B9%99ii">大学物理（乙）II</a></li><li><a href="#%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%86%E5%AE%9E%E9%AA%8C">大学物理实验</a></li></ul></li><li><a href="#%E4%B8%93%E4%B8%9A%E5%BF%85%E4%BF%AE%E8%AF%BE">专业必修课</a><ul><li><a href="%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90">高级数据结构与算法分析</a></li><li><a href="#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90">计算机组成</a></li></ul></li><li><a href="#%E4%B8%93%E4%B8%9A%E9%80%89%E4%BF%AE%E8%AF%BE">专业选修课</a><ul><li><a href="#%E5%9B%BE%E5%83%8F%E4%BF%A1%E6%81%AF%E5%A4%84%E7%90%86">图像信息处理</a></li><li><a href="#%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80">汇编语言程序设计基础</a></li></ul></li><li><a href="#%E5%BE%AE%E8%BE%85%E4%BF%AE%E5%BF%83%E7%90%86%E5%AD%A6">微辅修（心理学）</a><ul><li><a href="#%E5%BF%83%E7%90%86%E5%AD%A6%E5%AF%BC%E8%AE%BA">心理学导论</a></li><li><a href="#%E7%A4%BE%E4%BC%9A%E5%BF%83%E7%90%86%E5%AD%A6">社会心理学</a></li></ul></li><li><a href="#%E9%80%9A%E8%AF%86%E8%AF%BE">通识课</a><ul><li><a href="#%E7%BB%8F%E6%B5%8E%E6%B3%95%E7%90%86%E8%AE%BA%E4%B8%8E%E5%AE%9E%E5%8A%A1">经济法理论与实务</a></li><li><a href="#%E5%86%9B%E4%BA%8B%E7%90%86%E8%AE%BA">军事理论</a></li><li><a href="#%E5%AE%9A%E5%90%91%E8%B6%8A%E9%87%8E">定向越野</a></li></ul></li><li><a href="#%E5%9B%BD%E9%99%85%E5%8C%96%E8%AF%BE%E7%A8%8B">国际化课程</a><ul><li><a href="#%E7%AE%97%E6%B3%95%E5%9C%A8%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8">算法在游戏设计中的应用</a></li></ul></li></ul><h2 id="数理基础课">数理基础课</h2><h3 id="概率论与数理统计">概率论与数理统计</h3><ul><li>学分：2.5</li><li>任课老师：赵敏智</li><li>教材：《概率论与数理统计》（第二版）黄炜 等著（<s>不知为何还看到有不少同学用的是第一版的</s>）</li><li>分数构成：<ul><li>平时（60%）<ul><li>课后作业 + 到课率（25%）<ul><li>平时不想听课可以不用来，因为赵老师每次都会在签到前一天提醒大家有签到（<s>签完到就可以溜了</s>），所以考勤分应该是可以轻松拿下的</li></ul></li><li>讨论（5%）：5个讨论题，白送的5分（<s>可以直接扔给LLM完成</s>）</li><li>测验（30%）<ul><li>线上测验（这个学期的xzzd抽风了，连小测都能把服务器挤爆（<s>貌似还误伤了某些赶ddl的同学</s>），所以后来都是用疫情时期的考试系统做的（乐））</li><li>3次测验，取最高的2次成绩，所以只要前2次测验拿满，第3次就不必做了（前提是得有这个实力(dgoe)）</li><li>每次测验占15%，但其中的5%只要参加测验就拿下了，剩下的10%才是测验的成绩</li></ul></li></ul></li><li>期末（40%）</li></ul></li></ul><p>就个人感觉而言，这门课的难度比大一学的微积分和线代都要简单一些，因为像条件概率、独立事件、期望、方差之类的概念在中学就学过了，到了课程后半部分（第五章）才开始学习完全崭新的知识。也就是到了后半部分，由于我没有听课，所以做作业相当吃力。小测的话也是因为平时没怎么学，也没有刷题，导致成绩并不是很理想。</p><p>如果像我一样混混日子的话，大可以留到期末后两周再开始认认真真地学。我的学习方式是梳理一份系统完整的笔记 + 刷几套历年卷（每年的考点都差不多，相当稳定），这样能够确保能够应对考卷上的大多数题目。但今年的考卷计算量貌似特别大，有一堆要积分的题目，但我积分的计算方法忘得差不多了，只记得个分部积分法，所以期末考做的惨不忍睹QAQ。</p><p>强烈安利赵老师，虽然我几乎没怎么听赵老师的课（应该讲得还不错吧），但就给分而言还是相当nice的：很容易拿一个好看的平时分，而且该捞的分都捞了（然而绩点还是不太理想，只能怪我太菜了hh）。</p><p><strong>相关资源</strong>：</p><ul><li><a href="https://note.noughtq.top/math/pro-sta/">我的笔记</a></li><li><a href="https://savia7582.github.io/Exterior/Math/P%26S/0">Savia前辈的笔记</a></li><li>平时作业可以参考微信公众号<strong>yeeeting</strong>的答案</li><li>由于我买了学解的历年卷，所以也就没有在98搜集历年卷资源…</li></ul><h3 id="大学物理（乙）II">大学物理（乙）II</h3><ul><li>学分：3.0</li><li>任课老师：武慧春</li><li>教材：《工程物理学》诸葛向彬 著</li><li>分数构成：<ul><li>平时（40%）：沟槽的线性赋分<ul><li>到课率 + 平时作业（20%）</li><li>4次小测（20%）：whc老师的4次小测分别考的是静磁学、电磁感应、光的干涉和光的衍射（没有量子力学部分）</li><li>竞赛加分（但不会超过这40%的部分）</li></ul></li><li>期中（20%）：这个学期就考到电磁感应之前的部分</li><li>期末（40%）：重点考电磁感应及之后的部分（但并不意味着前面的不考）</li></ul></li></ul><p>我十分推荐选whc老师的课，尽管老师上课略带口音，语气有些催眠，对喜欢认真听课的同学而言不是很友好，但是对我这种很讨厌听物理课的同学相当友好：whc老师经常能够提前上完课；且每周都会发一个“每周要点”，便于复习参考，期末考前还会讲这些每周要点汇总成1份pdf文件，考前可以根据这份文件复习（已放在我的 GitHub 仓库里了）；有很多小测题目来自（或改编自）历年卷上的题目（<s>直到我刷了历年卷后才发现QAQ</s>），因此小测难度不是很大（<s>但我还是考得很烂</s>）。</p><p>这个学期的期中考和期末考的难度与往年保持一致，但需要注意的是题型只有<strong>选择题</strong>和<strong>计算题</strong>，没有填空题。考前刷几套历年卷 + 过一遍知识点（看课件、笔记都可以）就可以确保拿一个还算说得过去的分数了。当然想要卷绩点的话，就需要保证每个部分都不能落下，且可以参加一下竞赛，可以加一些平时分。</p><p><s>哈哈哈，终于不用学物理啦！！！</s></p><p><strong>相关资源</strong>：</p><ul><li><a href="https://note.noughtq.top/misc/physics/">我的笔记</a></li><li><a href="https://savia7582.github.io/Exterior/Physics/2/">Savia前辈的笔记</a></li><li><a href="https://github.com/NoughtQ/ZJU-Courses-Resources/tree/main/Physics-D1CX-D2QD">我搜集的课程资料</a>，包括whc老师的每周要点、少部分历年卷等</li><li>由于我买了学解的历年卷，所以也就没有在98搜集历年卷资源…</li></ul><h3 id="大学物理实验">大学物理实验</h3><ul><li>学分：1.5</li><li>任课老师：太多啦，就不列出来了</li><li>教材：《大学物理实验 I》李海洋 主编</li><li>分数构成：<ul><li>实验（70%）<ul><li>除了第一周的绪论课外，剩下的课上就要完成<strong>14个实验</strong>（2个必做实验（示波器、分光计） + 12个选做实验），在第一周就要到大物实验选课网站<strong>抢实验</strong>啦（不同于选课的彩票系统，实验名额先到先得！）</li><li>大概有二十多个实验，包括了力学、电学、光学、热学等实验。首先推荐选电学实验，操作上普遍较为简单（<s>手残党福音</s>）；除了十分简单的光速测量值得推荐外（我自己没有抢到，但朋友们都给出了积极的评价），其他光学实验都是不太推荐的</li><li>然而，更重要的是要<strong>避雷给分烂的老师</strong>，因为实验难做没关系，只是花的时间可能多了点，只要给分不错就没大问题了</li><li>除了数据处理部分外，实验报告的绝大多数内容大家都是抄的，强烈安利咸鱼暄老师的报告（链接见下方）。当然咸鱼暄老师的报告可能无法覆盖各位做的所有实验，所以还得借鉴别的学长的报告，推荐到微信公众号“SLOFFDE”获取资源</li><li>本周的实验报告可以在下周上课前提交，交报告箱在东4二楼北侧区域</li><li>这里列举一些给我打分较低（&lt; 90）的老师：（也有可能是我的问题，请自行甄别）</li></ul></li><li>期末（30%）<ul><li>考试内容仅包含绪论和2个必做实验，所以考的内容其实不多</li><li>相信我，考前只要花 3h 左右即可速成。借助教材、下面给出的笔记和历年卷资源，只要用心复习就能拿个还算不错的成绩了</li></ul></li></ul></li></ul><p><strong>相关资源</strong>：</p><ul><li><p>实验部分：</p><ul><li><a href="https://xuan-insr.github.io/other_courses/big_physics_exp/">咸鱼暄前辈的实验报告</a></li><li>微信公众号“SLOFFDE”</li><li><a href="https://github.com/NoughtQ/ZJU-Courses-Resources/tree/main/LabsOfPhysics-D2QD">我留下的实验数据、作图代码</a></li><li><a href="https://github.com/TonyCrane/ZJU-General-Physics-Experiment-I">xg的普物实验数据、作图代码</a>（虽然是普物实验，但也很有参考价值，<s>由于我不会用MatLab，所以</s> 我就借鉴xg的代码改了改(doge)）</li></ul></li><li><p>理论部分：</p><ul><li><a href="https://www.cc98.org/topic/6087554">今年的考卷</a></li><li><a href="https://www.cc98.org/topic/5802063">历年卷汇总帖</a></li><li><a href="https://www.cc98.org/topic/6087106">@_atri大佬的期末补天笔记</a>（超级好用的笔记！考试当天直接上了98十大）</li></ul></li></ul><h2 id="专业必修课">专业必修课</h2><h3 id="高级数据结构与算法分析">高级数据结构与算法分析</h3><ul><li><p>学分：4.0</p></li><li><p>任课老师：陈越</p></li><li><p>教材：</p><ul><li><em>Data Structures and Algorithm Analysis in C, 2nd Edtion</em>（同 FDS 教材）</li><li><em>Introduction to Algorithm, 3rd Edition</em></li><li><em>Algorithm Design</em></li></ul></li><li><p>分数构成：</p><ul><li><p>平时（60%）</p><ul><li><p>作业（5%）：每周课后布置在PTA上，多为少量的判断、选择题，偶尔会有编程题</p></li><li><p>小测（5%）：每周课上一开始花 10 min 完成，绝大多数题目来自 MOOC</p></li><li><p>讨论（10%）</p><ul><li>经典的“翻转课堂”</li><li>cy 要求各位在课前就得到 MOOC 自学相应课程内容，课上只会稍微提一下重点部分，讨论也基于这些内容展开</li><li>由于 cy 班同学不多，因此采取两人一组的形式参与讨论，组长的 PTA 上可以看到讨论题（<s>而组员只能看组长的电脑了</s>）</li><li>每周的讨论题在 2-3 道左右，难度参差不齐，有些题目只要求我们笼统地归纳算法的特点，而有些则是一些麻烦的证明题，建议认真听，有些题目还是有营养的</li><li>每道题都提供了上台发言的机会，上去发言的同学会有额外的 bonus（<strong>刷平时分最方便的手段</strong>，但由于本人究极社恐，从未上去发言过QAQ）</li><li>讨论题务必在当天提交（我们是早十的课，要求下午一点前提交）</li></ul></li><li><p>项目 + 互评（30%）</p><ul><li>显然是重头戏，具体分数计算为：最终作品（20%）+ 课上展示（6%）+ 互评（4%）</li><li>一共有 8 个 project，必做的 project 有 2 个，而每次 project 只允许至多 3 组（就是讨论课的分组）同学展示</li><li>多做一个 project 加 2 分（性价比较低，个人不推荐）</li><li>这个学期由于 cy 班人数过少，因此 cy 甚至没有招助教，因此报告分都是由 cy 亲自评的</li><li>感觉互评氛围并不像前辈们说的那样那么糟糕，感觉评分都挺合理的。可能推行这么多年了，大家的整体素质都提高了（？）</li><li>关于展示：每次展示会从组内随机挑选一位同学上台，且确保所有同学都有登台的机会（<s>社恐落泪</s>）</li><li>我的建议是遇到好做的 project 不要犹豫，马上抢；并且尽早完成 2 个 project 的展示，减轻期末复习压力</li></ul></li></ul><blockquote><p>这么看下来，即使没有显式的签到，你也必须得来上课hh</p></blockquote><ul><li>期中（10%）：<ul><li>本学期考到动态规划为止，由各班老师自己出卷子</li><li>cy 班的期中考相对比较容易，只要考前稳扎稳打地复习课件范围内的知识，就可以拿个不错的分数</li><li>如果期末考得比期中高，可以用期末分覆盖期中分（感觉这个政策对 ADS 而言聊胜于无）</li></ul></li></ul></li><li><p>期末（40%）</p><ul><li>整个 ADS 最噩梦的部分</li><li>如果单看出题老师名字的话（考试的时候是看不到出题人的），yds 的含量并不是很大（毛哥也出了不少题），但题目难度还是很大</li><li>考前除了像其中一样复习课内知识外，可以刷几套历年卷培养做题感觉（但对能力没有什么提升（乐））</li></ul></li></ul></li></ul><p>这门课介绍了数据结构的高阶内容，以及一些经典的算法，部分算法至今还在探索中，所以这是一门包罗万象、与时俱进的课程，这也意味着学习难度很高。由于 cy 要求大家课前自学，所以更要在课余时间内花下功夫；除去完成 project 的时间外，平时我每周要花 3-4h 学习一讲，并做好笔记，所以相当费时费力。生啃 cy 的 MOOC 可能不太现实，个人认为 cy 有些地方没有讲清楚（<s>而且那个祖传PPT给我一种传统与现代交汇的感觉（错乱）</s>）；在这种情况下，我更倾向于阅读像修佬等前辈的笔记或者 wyy 的讲义，对我来说文字和图画的力量可能更为强大些。正是前辈们的宝贵财富铺平了我的 ADS 学习之路，受此激励下我也努力产出完整的，经过自己思考的 ADS 笔记，最终对我的期中期末复习带来不小的帮助，在此我向所有分享笔记的前辈表达衷心的感谢！</p><p>关于 project，我认为只要认认真真做好两个必做的 project 就够了，不需要在课后花大量的时间做其他的 project，因为投入产出比太低了（除非你是绩点的极致狂热追求者，那就当我什么也没说），而且只要用心做，同学和老师给的分数一定不低（<s>除非遇到某些逆天玩意儿</s>）。此外，很重要的一点是<strong>找一个靠谱的同学组队</strong>，在这里我得感谢我的搭档，他的付出和配合让我的 ADS 课程体验变得更为舒服。</p><p>如果你是一个不喜欢听课，热爱自学，又想追求高绩点的同学，我建议选 cy 的课：首先“翻转课堂”倒逼我们自学，其次 cy 的期中考难度不大，且平时分给的真的很不错（虽然我作业做的很烂，讨论课一次没上台发言，但还是可以拿满平时分（根据总评推测出来的））。</p><p>尽管这些知识对于大多数同学而言不会直接用到，但也无疑开阔了我们的视野，对将来的工程开发和研究会有潜在的价值和帮助，还是很有意义的。</p><p><strong>相关资源</strong>：</p><ul><li><p>参考笔记：</p><ul><li><a href="https://note.noughtq.top/algorithms/ads/">我的笔记</a>（覆盖了cy课件内的所有内容，会有适当的扩展）</li><li><a href="https://note.isshikih.top/cour_note/D2CX_AdvancedDataStructure/">修佬的笔记</a>（讲得相当细致清楚，有详细的证明过程，我的ads入门导师！<s>但是缺了一些部分，实属可惜QAQ</s>）</li><li><a href="https://github.com/NoughtQ/ZJU-Courses-Resources/blob/main/ADS-D2QD/2024%E6%98%A5%E5%A4%8FADS%E8%AE%B2%E4%B9%89-wyy.pdf">wyy的讲义</a>（神中神的讲义！讲得更为深入，需要有扎实的数学功底才能完全掌握其中的精髓）</li><li>事实上还有很多前辈和大佬也做了ADS的笔记，大家可以在98里搜搜看，这里就不列出来了</li></ul></li><li><p>历年卷：</p><ul><li><a href="https://github.com/NoughtQ/ZJU-Courses-Resources/tree/main/ADS-D2QD/exams/2024-2025">今年的考卷</a></li><li><a href="https://github.com/HobbitQia/ZJU-Courses-Resources/tree/master/%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90(ADS)">HobbitQia前辈的历年卷汇总</a>（相当齐全）</li></ul></li><li><p>更多信息可参考<a href="https://zju-turing.github.io/TuringCourses/major_basic/advanced_data_structure/">图灵班学习指南</a></p></li></ul><h3 id="计算机组成">计算机组成</h3><ul><li>学分：4.5</li><li>任课老师：赵莎</li><li>教材：<ul><li><em>Computer Organization and Design</em>, RISC-V Edition</li><li><em>Computer Organization and Design</em>, 3rd Edition（只有最后一章来自该教材）</li></ul></li><li>分数构成：<ul><li><p>平时（20%）：作业、课堂</p><ul><li>平时分主要来自作业，貌似只签到了一次（亏我每节课都来QAQ）</li><li>Bonus：期末前几周会让同学上台讲解作业，每个同学最多讲一题（将机会留给更多同学），根据题目难易程度会奖励不同分数（2~7分 * 20%）<ul><li>这次，还是因为我的社恐，没有上台讲题，而且正好卡绩了ww</li></ul></li></ul></li><li><p>实验（30%）</p><ul><li>具体分数<ul><li>Lab 0–Lab 3（30%）：基础实验，除 Lab 3 外不用写报告（好耶！）</li><li>Lab 4（30%）：单周期 CPU（可能是最难的实验）</li><li>Lab 5（40%）：流水线 CPU</li></ul></li><li>Bonus 可多了，Lab 3-5 都有选做部分，以及一个 Lab 6，这些部分没有 ddl，所以建议各位在完成必做实验的基础上拿下所有的 Bonus，难度并不是很大</li></ul></li><li><p>期中（10%）</p><ul><li>课上完成，开卷（但不得上网查阅，底线是可以阅读下载好的电子笔记），全英文</li><li>期末无法覆盖期中（不知道是谁想出来的，导致老师在课上反复强调）</li></ul></li><li><p>期末（40%）：闭卷、全英文</p></li></ul></li></ul><p>由于我从本学期开始崇尚自学为主的学习方式，因此虽然我每次都是到课的（应对随时出现的签到），但我在课上基本都是在做其他事情（为了避免干扰，我一般都是在做大物实验报告），而在课后对着教材、课件和前辈们的笔记努力自学。自学的过程漫长而痛苦，因为书上讲得更详细清楚，所以我会先过一遍书本，然后再提炼书本内容做笔记，遇到不懂的地方比对课件、md的智云课堂和前辈们的笔记再理解。即便这样，每次复习的时候总会发现有不少错误，在此十分感谢一些同学们的及时纠正！</p><p>总结一下，如果想要<strong>速成</strong>的话，学习资料的优先级为：前辈们的笔记 &gt; 课件 &gt; 教材；如果想要<strong>认真学习知识</strong>的话，优先级为：教材 &gt; 前辈们的笔记 &gt; 课件。</p><p>关于实验，课件和一些代码资料都会下发给我们，照着课件一步步做（跳过前面冗余的理论知识介绍，课上都讲过了）还是能够较为顺利地做下去的，当然前提是得掌握好 Verilog 的基础语法并且理论课上要学好。虽然这些实验确实有助于对理论知识的理解，但很多实验本质上就是<strong>连线题</strong>，相当枯燥乏味，再配合PPT那一坨，所以个人认为实验设计并不是特别负责与合理。但好在助教gg的热心帮助和善解人意，实验验收还是相对比较宽松的，为实验课的体验雪中送炭。</p><p>接着谈谈应试方面的东西。这次期中考试时间因为某些原因有所延后，因此考试范围为1-4章，题量不小，所以虽然是开卷考也要提前做好准备。对于期末考，只要是课上讲到过的都有可能成为考点，虽然重点内容是2-5章，但1、6两章也有一些小题，比如今年就考到各类RAID的特点（第6章）。期末题量有些大的，我做完考卷后只剩下10 min了，所以考前一定要熟悉重点题型（多刷历年卷）并掌握相应知识点（看笔记）。</p><p>虽然但是，就个人感觉而言（我偶尔会听一点课），尽管 zs 老师并不是搞计算机硬件/系统的，但讲得应该还算不错；更重要的是给分很 nice，所以如果预置的是 zs 老师的话，推荐不要更改。</p><p><strong>相关资源</strong>：</p><ul><li><p>参考笔记：</p><ul><li><a href="https://note.noughtq.top/system/co/">我的笔记</a></li><li><a href="https://xuan-insr.github.io/computer_organization/">咸鱼暄前辈的笔记</a>（一部分是由修佬改写的，因为原来学的是MIPS，而现在学的是RISC-V。我的计组入门导师！）</li><li><a href="https://mem.ac/course/co/">mem佬的笔记</a>（更为凝练的总结！）</li></ul></li><li><p>实验部分：</p><ul><li><a href="https://github.com/NoughtQ/ZJU-Courses-Resources/tree/main/CO-D2QD/lab/reports">我的实验报告（Lab 3-5）</a></li><li>Verilog 速通：<a href="https://www.runoob.com/w3cnote_genre/verilog">菜鸟教程</a> + <a href="https://hdlbits.01xz.net/wiki/Main_Page">HDLBits</a></li><li>RISC-V 汇编语言相关（有汇编转机器码等实用功能）：<a href="https://venus.cs61c.org/">CS61C Venus</a></li></ul></li><li><p>历年卷：</p><ul><li>今年貌似没人整理历年卷（悲）</li><li><a href="https://www.cc98.org/topic/5922030">23-24春夏</a></li><li><a href="https://www.cc98.org/topic/5640722">22-23春夏</a>（图灵CS的计组，但内容是差不多的）</li><li><a href="https://www.cc98.org/topic/5348351">21-22春夏</a></li><li><a href="https://www.cc98.org/topic/5114223">20-21春夏</a></li></ul></li></ul><h2 id="专业选修课">专业选修课</h2><h3 id="图像信息处理">图像信息处理</h3><ul><li><p>学分：2.5</p></li><li><p>任课老师：宋明黎</p></li><li><p>教材：无，但有一堆参考书籍，不看也没问题</p></li><li><p>分数构成：</p><ul><li><p>实验（40%）</p><ul><li>一共有6个实验，实验内容都是实现课上介绍过的东西，用C/C++编写，不得调用图像处理相关的库</li><li>最麻烦的实验就是实验一，要求读写 bmp 图像文件，因为是第一次上手，所以有些不熟悉，可能得借助前辈的资料。只要能够搭好这里的脚手架后，后面的实验就相对比较容易了</li><li>建议认真完成实验部分，不仅有助于理论知识的理解；当做完六个实验后，我们已经在不知不觉中建立了一个属于自己的图像处理库，还是蛮有成就感的一件事</li><li>抄袭0分，但我不知道查重严不严，可能得看助教吧</li><li>实验作业要求交在 ftp 服务器上，由助教负责批改</li></ul></li><li><p>期末（60%）</p><ul><li>经典默写题，题型为填空题和大题，其中大题有部分计算题，可以带计算器</li><li>考前一两周老师会总结期末考点，建议好好听并记好笔记，今年考题就是在这些考点范围内，因此面向考点复习可能是最高效的复习手段</li></ul></li></ul><blockquote><p>没有签到哦！</p></blockquote></li></ul><p>由于2023级培养方案改动，貌似很多同学的选课都与这门课冲突，因此今年选这门课的人相当少，只有二十多人，而且平时上课的人数不超十人，但还是在一间可以容纳两百多人的教室上课；外加 slm 老师毫无激情的讲课，上课体验可想而知。因此上了几周课之后，我就跑到图书馆自学 dip 去了。</p><p>自学主要参照课件和前辈们的笔记，所以自学难度从整体看不是很大，但是课程难度的深入，自学难度还是呈上升趋势的，到最后讲深度学习的部分时，我都晕头转向了（都怪凌乱的课件），不得不到网上寻找资料自学，才得到一个大致模糊的印象。但我确实收获到很多关于图像处理方面的技术，不愧是一门干货满满的课。</p><p>今年较为诟病的期末部分难度并不大（甚至没有考深度学习部分（乐）），且题量不大，大概花了一个多小时就交卷了（其实过了一小时之后就陆续有同学交卷了）。考前我对着笔记花了两三天背知识点，同时结合历年卷了解一些常考的题型，发现题型整体上是比较固定的。但期末给分比较求是，所以请务必</p><p><strong>相关资源</strong>：</p><ul><li><p>笔记：</p><ul><li><a href="https://note.noughtq.top/software/dip/">我的笔记</a></li><li><a href="https://note.hobbitqia.cc/dip/">HobbitQia前辈的笔记</a></li><li><a href="https://note.jiepeng.tech/CS/DIP/">JiePeng前辈的笔记</a>（大体内容与HobbitQia前辈的笔记一致，在此基础上有一定的修补）</li></ul></li><li><p>实验相关：</p><ul><li>我一般用 typst 做实验报告，喜欢用 typst 的同学可以用mem佬的<a href="https://github.com/memset0/ZJU-Project-Report-Template">模板</a>，我往里面补了 dip 报告的模板</li><li><a href="https://github.com/NoughtQ/ZJU-Courses-Resources/tree/main/DIP-D2QD">我的实验报告</a></li></ul></li><li><p>历年卷：</p><ul><li><a href="https://www.cc98.org/topic/6082746">今年的考卷</a></li><li><a href="https://www.cc98.org/topic/5798601">23-24秋冬</a></li><li><a href="https://www.cc98.org/topic/5536111">22-23秋冬</a></li><li><a href="https://www.cc98.org/topic/5235892">21-22秋冬</a></li><li><a href="https://www.cc98.org/topic/5028101">20-21秋冬</a></li></ul></li></ul><h3 id="汇编语言程序设计基础">汇编语言程序设计基础</h3><ul><li><p>学分：2.0</p></li><li><p>任课老师：白洪欢</p></li><li><p>教材：</p><ul><li>《80x86 汇编语言程序设计基础》（小白老师的内部教材，大概几周过后会要求各位购买，20 RMB）</li><li>《汇编语言》（第 4 版）王爽 著（同样介绍 8086 汇编语言，众多前辈强烈推荐的课外自学教材）</li></ul></li><li><p>分数构成：未知，根据参考过的经验帖推测是：作业（50%）+ 期末（50%）</p></li></ul><blockquote><p>是的，这门课也没有强制签到。</p></blockquote><p>这门课主要介绍的是古老的 8086 和 少量的 80386 汇编语言。小白老师虽然能够把汇编语言的语法知识点讲得很清楚，但是个人感觉讲解顺序有些乱，不成体系，这样不便于期末复习，所以做笔记的时候我刻意地改变章节上的安排，以（自认为）更合理的顺序介绍 x86 汇编语言知识，对我而言这样组织更为通畅、符合逻辑。</p><p>相比于（曾经）信安必修的短名《汇编语言》课程，这门课的作业量相当少，一共只有6次作业，作业布置在PTA上，内容大致就是用汇编语言完成函数题，稍微复杂点的题目还给出对应的C语言代码，直接对着翻译就OK了；而且最后一次作业是针对期末的模拟考，难度与期末考相当（并不难）。平时作业我并不会用小白老师提供的虚拟机（10GB 的臃肿 xp 虚拟机），我的方法是用 vscode 的插件 MASM/TASM 来运行和调试（功能同 turbo debugger）汇编代码，还是挺方便的。</p><p>期末考会涉及到课上介绍的所有内容（除去混合语言编程，保护模式也不考），考试包括理论考和实验考。前者包括判断、选择，时间比较紧张，会考的特别细（有些题都是连蒙带猜过的），因此需要在考前有充分的复习；后者包括1道程序填空 + 2道函数题，给的时间相当充裕，只要考前把做过的作业给重新做一遍就算准备充分了，应该有不少人是提前交卷的。由于课程政策，我不方便透露更多的信息。</p><p>给分相当不错（<s>也有可能是我同时修了计组，对这门课而言有些降维打击了</s>），大多数同学都在 dd 群里表达了感谢。由于介绍内容和开发环境过于老旧，所以我推荐有一门高级语言基础（至少学过C或Python），对汇编语言非常感兴趣，且培养方案里没有涉及到汇编语言课程（像计组、体系、OS都要用 RISC-V，所以不必额外再学）的同学修这门课，否则的话还是不太推荐的。</p><p><strong>相关资源</strong>：</p><ul><li><a href="http://cc.zju.edu.cn/bhh/">小白老师的个人网站</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=xsro.masm-tasm">vscode 插件：MASM/TASM</a></li><li><a href="https://note.noughtq.top/lang/asm/">我的笔记</a></li><li><a href="https://note.tonycrane.cc/cs/pl/asm/">xg的笔记</a></li><li><a href="https://mem.ac/course/fasm/">mem佬的笔记</a></li><li><s>历年卷是不可能有的(doge)</s></li></ul><h2 id="微辅修（心理学）">微辅修（心理学）</h2><p>当初可能是因为对人的心理的起源、变化和差异等稍微有些兴趣，或者想开阔一下自己的视野，头脑一热便报名了心理学的微辅修，但在学习的过程中我发现自己并不是真心喜欢心理学，导致后面学习的时候动力不足，课是一点没听的，课后也就简单地从课件梳理一些笔记，应付期末考试。虽然但是，在这个过程中，我确实学到了不少心理学相关的基础知识，这些知识有助于我认识和解释生活中常见的一些心理学现象，也算是有一点收获吧。</p><p>总之，我吸取到的重要教训是：不要盲目报名微辅修，一定要在确保自己学有余力，且对某个学科特别热爱的情况下再慎重报名，否则微辅修可能成为你学习之路上的“拖油瓶”。</p><h3 id="心理学导论">心理学导论</h3><ul><li>学分：2.0</li><li>任课老师：蔡永春 &amp; 陈珂</li><li>教材：《普通心理学》（厚厚的一本，不推荐购买，只需参考课件即可）</li><li>分数构成：<ul><li>平时（50%）：<ul><li>随机小测：不计分，作为考勤的一种手段</li><li>考勤：相当频繁，确保每次课都到场</li><li>期中论文：冬学期发布，会给定两个主题，挑选其一写一篇1500-3000字（正文部分）论文，需引用不少于5篇的参考文献，并采用《心理学报》投稿格式要求</li></ul></li><li>期末（50%）：开卷考</li><li>Bonus：参加心理学实验，1h 记 1 分，上限 5 分（加在总成绩上）</li></ul></li></ul><p>秋学期由蔡老师授课，冬学期由陈老师授课。作为一门以“导论”为后缀的课程，讲授的主题确实挺多，包含了大脑、感觉、记忆、意识、人格等 13 个主题。平时的任务相当轻松，基本不需要听课，因为课件内容干货满满，包含了所有重要的知识点，面向课件学习基本就不成问题了。平时最大的任务就是期中论文，但难度并不大，只要留足时间认真写，便可以拿一个不错的分数了。如果想要卷绩点的话，请积极参加钉钉群发布的心理学实验，几乎每天都会有实验，但是要拼手速抢名额。</p><p>由于期末考是开卷的，所以考前我就稍微过了一遍知识点，然后就带上打印好的笔记（其实就是整理好的课件）上考场了。题型包括单选、填空、判断（需解释为什么错）、名词解释和问答题，题目难度不是很大，绝大多数内容都是可以从课件中找到的。因为考前过了一遍内容，所以找起来还是比较顺利的，慢慢做也能提前半小时交卷。最后给分还算可以，算是对得起我草草应付的结果了。</p><p><strong>相关资源</strong>：</p><ul><li><a href="https://note.noughtq.top/misc/psychology/intro/">我的笔记</a></li><li><a href="https://www.cc98.org/topic/6088563">笔记资料打印版</a>（便于带到考场上，个人认为只要带这么一份就够了）</li></ul><h3 id="社会心理学">社会心理学</h3><ul><li>学分：3.0</li><li>任课老师：方霞 &amp; 吴明证</li><li>教材：《社会心理学》（同样不推荐预订，只需参照课件即可）</li><li>分数构成：<ul><li>平时（50%）<ul><li>考勤：虽然课件没讲，但是考勤相当频繁，几乎需要次次到场</li><li>平时作业：说是4次，实际上本学期只有3次</li><li>期中考试：第8周，开卷</li><li>至少完成两次心理学实验</li></ul></li><li>期末（50%）：闭卷（悲）</li><li>bonus<ul><li>课堂发言：发言数前10%的同学加2分</li><li>为“明德惟心”公众号写一篇推文，1篇1分，最多加1分</li><li>还有一些随机掉落的 Bonus，比如本学期吴明证老师说看 MOOC 也有加分（不知属不属实）</li></ul></li></ul></li></ul><p>秋学期由方老师授课，冬学期由吴老师授课。我还是把这门课当作自习课，但奈何方老师的随机抽人回答环节和吴老师的幽默风趣，我常常会被打断。由于方老师由国外求学的经历，所以她的课件几乎是全英文的；而吴老师的课件文字内容多，但杂乱，所以为我面向课件的学习带来了一定阻力。这让我深刻意识到在不喜欢的课上上课是一件多么痛苦的事情。</p><p>平时会发布几次作业，主要就是借助社会心理学的知识来回答一些题目，但有1个作业是要求写一个心理学研究计划，稍微麻烦些。</p><p>期中是开卷考，并且在大家要求下变成了在 xzzd 考，题型为5个简答题，时间还算充裕的，所以考前备齐资料现场复习都来得及。但期末是闭卷考，所以需要背诵大量的概念，这个过程相当痛苦。复习资料的话就参照课件和吴明证老师考前发的提纲（思维导图貌似没啥用，而且很糊）；可以看看历年卷，但是由于年代久远，参考价值并不大。题型包括选择、名词解释、简答题（涉及1章内容）和论述（涉及多章内容），题量不小，所以考试时得抓紧时间。</p><p><strong>相关资源</strong>：</p><ul><li><a href="https://note.noughtq.top/misc/psychology/social/">我的笔记</a></li></ul><h2 id="通识课">通识课</h2><h3 id="经济法理论与实务">经济法理论与实务</h3><ul><li>学分：1.5</li><li>任课老师：周黎明</li><li>教材：《经济法理论与实务》</li></ul><p>真正“事少给分高”的神课。由于没有强制签到，所以平时甚至不用来听课，只要听最后一周的复习课就行了。但我还是建议各位来听课，就当做一天的消遣——我想即使是对经济法一窍不通或不敢兴趣的同学，也会被周老师生动风趣的授课风格给打动。</p><p>平时作业只要写一份合同就行了，前提是得按照要求来，具体内容可以自由发挥，难度不大，我大概花了一两个小时就完工了。注意越早交分数越高哦。</p><p>考前一周的复习课老师会带我们划重点。期末考是开卷考，我带了教材、课件打印件（貌似意义不大）以及 MOOC 的题目这些资料。题目有判断、选择和一道分析题，难度不大，时间还算充裕，大多数内容都可以从课本中找出来，有些题目是 MOOC 原题。但由于平时没有听课，所以最后的分析题我毫无意外地翻车了——开始的判断就错了，后面的分析也就是正儿八经的胡说八道了。可即便如此，总评分依旧给的很高，dd 群里也有很多“谢谢老师”的回复，所以我强烈推荐大家选这门课。</p><h3 id="军事理论">军事理论</h3><ul><li>学分：2.0</li><li>任课老师：吕强</li><li>教材：《军事学概论》（一本年龄比我还大的教材，由于种种原因始终无法刊印最新版）</li><li>分数构成：<ul><li>平时（60%）<ul><li>考勤：随机的雷达点名，一般都是在上课前就开启的</li><li>课堂发言</li><li>期中论文：本学期的主题是讨论俄乌战争，不少于2000字</li></ul></li><li>期末（40%）：开卷考，全部都是客观题（判断、选择、不定项）</li></ul></li></ul><p>如果你不是军事迷，并且想要一个好看的分数的话，我不建议选 lq 老师的课：尽管他的评分很高，讲课应该也不错（我没有听过课，所以只有模糊的印象），但论文要求更为严格（基本分为 80/100，必须严格按照论文模板的要求来，加分项不多，扣分项可不少），且给分一般。</p><p>关于期末复习，建议考前两三天对着 98 的提纲翻一遍课本（<s>莫名想到提纲和课本就是 cache 和 memory 的关系，学计组学的</s>），如果课本看不进去的话也可以多刷刷历年卷，不仅培养感觉，也有助于查漏补缺。期末考共有70道客观题：20 判断 + 20 单选 + 30 不定项，其中判断和单选每题1分，不定项每题2分，所以老师们推荐的做题顺序都是：不定项 -&gt; 单选 -&gt; 判断（有 1/2 蒙对的几率，所以来不及做可以猜）。不过我自己还是按照先后顺序做，遇到找不到答案的题目就跳过。时间上还是很紧张的，所以考前的准备工作一定要做足。</p><p><strong>相关资源</strong>：</p><ul><li><a href="https://www.cc98.org/topic/6082483">超有用的提纲</a></li><li><a href="https://www.cc98.org/topic/6084580">今年的考卷</a></li><li><a href="https://www.cc98.org/topic/5922335">23-24春夏</a></li><li><a href="https://www.cc98.org/topic/5803648">23-24秋冬</a></li><li><a href="https://www.cc98.org/topic/5645113">22-23春夏</a></li><li><a href="https://www.cc98.org/topic/5536111">22-23秋冬</a></li><li>我做的历年卷不多，所以就收集到这里了…</li></ul><h3 id="定向越野">定向越野</h3><ul><li>学分：1.0</li><li>任课老师：高泽（虽然挂的名字是金熙佳老师，下个学期的课也是如此）</li></ul><p>由于本人身体素质差 + 身体不太灵活，学习体育技能对我来说是一件很吃力的事，所以我就报了定向越野这种只要有空间感和一口气的体育课。课程安排大概是：先身体素质锻炼，然后有一节理论课，之后就要在学校范围内跑图了（但用的是打孔方式的打卡），中间还有一节课让我们熟悉电子打卡，最后三节课要到玉泉校区、玉泉植物园和华家池校区跑图，作为期末专项考试。由于流程比较简单粗暴，而且还能到校外逛逛，所以定向越野给我的印象并不坏，美中不足的就是每次跑完后，我在军训时得的肩周炎就又犯病了QAQ</p><p>高泽老师挺随和的，要求并不严，而且给分也还不错（我期末跑图跑的很慢，但分数也不是很低），像我一样喜欢在体育课摸鱼的同学推荐选他的课。</p><h2 id="国际化课程">国际化课程</h2><h3 id="算法在游戏设计中的应用">算法在游戏设计中的应用</h3><ul><li>学分：3.0</li><li>任课老师：William Nace（外方教师）、霍宇驰（中方教师）</li><li>分数构成：<ul><li>平时（20%）：考勤 + 平时作业</li><li>实验（20%）：找一个开源的游戏项目，介绍其中用到的游戏算法</li><li>期中（20%）：线上平台测试，都是选择题</li><li>期末（40%）：其实就是最终的实验报告，没有期末考试</li></ul></li></ul><p>这门课是开学几周后在计院官网里发布选课通知的，在学长们的建议下，自身具备一定的基础，外加想拿国际化课程学分，所以毫不犹豫地报名了。</p><p>一句话评价这门课：超级大水课，事少给分高。外方教师是 CMU 的教授，负责线上理论课的授课（全英文），主要介绍游戏中常用的算法，包括随机化、导航、碰撞检测，3D渲染等主题，要是认真听的话会有不小的收获。学习前提是要掌握 Python，因为课程主要用 Pygame 库来编写游戏的。如果像我一样没时间听课的话也可以水过去，只要记得每次上课 10 min 后的签到环节就行了，只是课后作业做得稍微痛苦些，但也有课件资料和回放视频供参考，所以不用太担心。一共只有4次课后作业，有单选也有多选，每次题量在5题左右，都是来自一个题库里。</p><p>期中考试是线上考，类似平时作业，20道选择（单选/多选都有），时间肯定够，可以查阅资料，所以难度不高。</p><p>重点在于课程实验，大概在最后几周发布，要求分析一个开源游戏项目中用到的游戏算法，包括展示和写报告两个环节。展示的话要在机房里向助教介绍游戏玩法，以及讲清楚游戏算法是如何实现的；之后要将这些分析和解释写在报告上，全英文书写。早交报告会有额外加分（如果我能早一周交的话就不会被卡绩了QAQ），所以建议有时间抓紧做。我介绍的游戏是 <a href="">DungeonRush</a>，是一款肉鸽 + 贪吃蛇风格的游戏，主要分析的是其中的碰撞检测算法。虽然游戏简单，但是分析起来可不简单，花了我不小的功夫。最后一周还会邀请几位实验表现优异的大佬上台展示，有大佬甚至自己写了个不错的游戏，更有一位大神实现了一个游戏引擎，让出身科班的我深感自己的卑微渺小。</p><p>虽然我的平时作业和期中考的分数并不高（平均六七十分左右吧），实验也没有特别突出的表现，但是总评分给的真的特别高，对于一门3学分的水课而言简直赚翻，因此我强烈推荐！</p><p><strong>相关资源</strong>：</p><ul><li><a href="https://hellogithub.com/?sort_by=featured&amp;tid=WxuLqCrUNF">HelloGitHub 的“游戏”板块</a>，里面有很多开源小游戏，可以作为实验报告的素材</li><li><a href="https://github.com/NoughtQ/ZJU-Courses-Resources/blob/main/AlgoInGameDesign-D2QD/lab-report.pdf">我的报告</a></li></ul><h2 id="后记">后记</h2><p>又写了一篇万字经验帖，感觉整个人都快被榨干了——有些模糊的回忆，有些痛苦的回忆都在阻碍我完成这份经验帖，虽然拖的有点久，但好歹总算写成了，值得庆祝一下！从中，我得到的教训是：不一定要等所有课程都出分了再写课程回忆录，可以在上某门课的时候就随时记录一下，这样不至于要浪费很多精力来回忆（这一点同样适用于课程资源的整理上）。</p>]]></content>
      
      
      <categories>
          
          <category> 课程回忆录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZJU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024年度总结</title>
      <link href="/posts/c2cf88b8.html"/>
      <url>/posts/c2cf88b8.html</url>
      
        <content type="html"><![CDATA[<p>今天既是2024年的最后一天，也是期末考倒数第2天。虽然期末复习相当紧张，但我现在已经学不进去了——东操场上学生节活动的嘈杂声音直达图书馆，面前黑底白字的笔记看得我昏昏欲睡，于是我决定停下脚步，不妨稍作休息，回头来看这一年来的大学生活。</p><p>如果要用两个形容词来描述我的2024年，我给出两个词：匆忙，且平庸。现在的大学生活远远不是踏入大学门前那个懵懂无知的少年所幻想的那样，那新鲜而自由的空气早已被压抑和紧张的氛围取代，每天的工作仅仅是为了完成学业上的任务；曾想每周抽出周末的时间自学一些国外优质的CS课程，连这点小小的愿望都会被各种大作业、ddl和庞杂的记笔记的习惯给挤压，结果一年下来，除了年初学了<a href="https://cs50.harvard.edu/x/2024/">CS50</a>、暑假大致浏览了<a href="https://web.stanford.edu/class/cs106l/">CS106L</a>的课件外，几乎没有自学的经历，那么自然也没有任何项目的经历，自认为这样的一个大二CSer是不合格的。</p><p>前面提到了“记笔记的习惯”——这是我这一年持续时间最长的活动。记笔记的形式从手写电子笔记（Goodnotes），到本地Markdown笔记（Obsidian），再到现在在线分享笔记（Mkdocs），我大概已经摸索出了一套较为舒服的记笔记方式：虽然编辑器用的是Vscode，可能在其他人看来不是那么舒服，但我已经完全适应了（<s>学习颅内渲染语法</s>）；经过几个月的努力配置（<s>甚至在春夏学期的期末周还在坚持美化，间接导致期末火葬场</s>），我让Mkdocs笔记看起来比较简洁舒服了。相当缺乏社交（线下和线上都是）的我开始在98上分享自己的笔记（也在<a href="https://isshikihugh.github.io/zju-cs-asio/">ZJU-CS-ASIO</a>列出了自己的笔记和博客，<s>貌似只有我一个人搞了两份</s>），希望通过这种方式认识更多的同学；同时也想让同学们积极指出我<a href="https://note.noughtq.top">笔记</a>的错误（仍然有相当多的错误等待挖掘），或者针对笔记内容讨论自己的想法之类的（利用了点费曼学习法的思想）。结果出乎意料的好，有很多同学光顾了我的笔记，并且还有一些同学积极指出我的错误，让我感到欣慰和满意——我的笔记不仅帮助了自己，也帮助了他人，这很nice。尽管我在前面对这个习惯有些抱怨，因为它占用了我大量的时间，但是进入2025年，我还是会保持这个习惯的，最主要的原因是我认为记录自己学习时的思维过程是相当重要的，不但能够证明自己学过某些东西，而且也作为自己的“外置大脑”，当我需要知道某个知识点的时候能够随时找出来，再看几眼可能就悟了。</p><p>此外，可能说不上是一件大事，但对我来说可能有深远意义的就是：我加入了X-Lab！本来在春夏学期就可以报名的，但是当时不知怎的，看到长长的报名表，顿时懒癌发作，没有往下填的动力。本以为这件事只是我生活中的小插曲，结果到了暑假的时候，我的高中同学联系到我，给到了X-Lab的内推资格。虽然还是要填一模一样的报名表，但这次我毫不犹豫地接受了，毕竟接受了还是有机会加入的，但拒绝了的话我之后就没有任何机会了。由于是暑假，所以是线上面试，结果面试的时候貌似我们组就我白纸一张，其他大佬有着各种各样的项目经历，我在听的时候心里都凉了半截。但好在是线上面试，便于我临场发挥，所以被我混过去了，成功进入实习期。由于是暑假进来的，要追赶春夏学期进来的同学，所以一个多月的暑假基本都是在完成实习期的任务（虽然因为时间原因只完成了前半）。隔了好久，X-Lab那边终于有了消息：转正面谈之后就可以成为正式成员了（实际上只要不是太离谱的话，应该每个人都会过的）。正式加入软件团队后，除了每周的例会（主要是听学长的分享）外，还有一些让我这个社恐倍感压力的活动，比如X-Lab的全体毅行活动里有个收集16个签名的游戏，虽然刚开始有些畏惧，但是后来弄着弄着也竟然被我收集完了，中间我也认识了不少人，还算挺有意义的；再比如4天的晚安短信，实际上是“自我介绍 pro max”，每天都要换一个话题，本来二、三两天应该讲有趣的事和恋爱经历，但很可惜的是我既兴致不高，又是母单，所以被我强行转成其他话题介绍了。其中第三天我写了个所谓的“年度总结”，我本来想直接 Ctrl + C 和 Ctrl + V，再稍微修改一下就发到我的博客上了，但我还是决定重写一版了，虽然内容上大差不差，但是稍微精简了些。之后X-Lab会给我们分配一些项目——终于可以实战了，想想还是比较激动的~</p><p>感觉自己写了一堆流水账，但没办法，毕竟这是我第一次写年度总结，外加我没有什么文采，只能写成这样了。本来心里还有其他想法的，但写着写着这些想法就从我的脑海中淡忘了，那就算了吧。最后，我想给2025年的自己画一个大饼，看我能不能承受住：</p><ul class="contains-task-list"><li class="task-list-item"><p><input class="task-list-item-checkbox" disabled="" type="checkbox"> Mkdocs笔记本的进一步美化（主页个性化、开发插件）</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" disabled="" type="checkbox"> 记笔记、课内专业课与国外自学课程相结合（难度不小）</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" disabled="" type="checkbox"> 除了专业课外，我还想自学以下内容</p><ul><li>Python 进阶知识</li><li>人工智能基础知识（UCB CS188）</li><li>软件工程（MIT 6.102）</li><li>CSAPP</li><li>…</li></ul></li><li class="task-list-item"><p><input class="task-list-item-checkbox" disabled="" type="checkbox"> 参加X-Lab的团体项目，搞出点成果</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" disabled="" type="checkbox"> 实习？</p></li><li class="task-list-item"><p><input class="task-list-item-checkbox" disabled="" type="checkbox"> To be continued</p></li></ul><p>图书馆已经打铃了，那我也就写到这里了。祝2025年的我能够挺过期末周，拿下满意的成绩；也祝看到这篇帖子的读者朋友们，进入2025年之后身体健康、事事遂心！</p>]]></content>
      
      
      <categories>
          
          <category> 年度总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 年度总结 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐大家看我的笔记本~</title>
      <link href="/posts/d303d5ed.html"/>
      <url>/posts/d303d5ed.html</url>
      
        <content type="html"><![CDATA[<p>有必要说明一下：我搭博客的目的主要是为了分享个人的心得感受或随笔，所以不包括笔记类的内容。平日上学的时候，我的笔记本可能更新得更多一些（目前主要是ZJU课内笔记），所以感兴趣的小伙伴可以来翻翻<a href="https://note.noughtq.top">我的笔记本</a>，如果觉得不错的话不妨点个⭐~</p>]]></content>
      
      
      
        <tags>
            
            <tag> Notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大一秋冬 课程回忆录</title>
      <link href="/posts/e002edb3.html"/>
      <url>/posts/e002edb3.html</url>
      
        <content type="html"><![CDATA[<h2 id="一些碎碎念">一些碎碎念</h2><div class="note icon-padding flat"><i class="note-icon fas fa-circle-info"></i><p>这篇回忆录本来应该早在大一秋冬期末周结束后就该写出来的，但当时的我太无知了，还没有受过前辈们的学习笔记和课程经验分享之类的大量熏陶，因此没有想到过去记录我的学习经历。虽然到了大一春夏我意识到这一点，但不幸的是，在大学的一年里，我的拖延症越来越严重了，于是一直拖到现在快要开学的节点，我才想到要补上这一个缺口。毕竟时隔大半年了，很多记忆都淡忘了，因此下面我就简单记一下我的学这些课程的经历。</p></div><h2 id="目录">目录</h2><ul><li><a href="#%E6%95%B0%E7%90%86%E5%9F%BA%E7%A1%80%E8%AF%BE">数理基础课</a><ul><li><a href="#%E5%BE%AE%E7%A7%AF%E5%88%86%E7%94%B2i">微积分（甲）I</a></li><li><a href="#%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E7%94%B2">线性代数（甲）</a></li></ul></li><li><a href="#%E4%B8%93%E4%B8%9A%E5%9F%BA%E7%A1%80%E8%AF%BE">专业基础课</a><ul><li><a href="#c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E5%8F%8A%E5%AE%9E%E9%AA%8C">C程序设计基础及实验</a></li></ul></li><li><a href="#%E9%80%9A%E8%AF%86%E8%AF%BE">通识课</a><ul><li><a href="#%E5%A4%A7%E5%AD%A6%E8%8B%B1%E8%AF%AD-iv">大学英语 IV</a></li><li><a href="#%E6%80%9D%E6%83%B3%E9%81%93%E5%BE%B7%E4%B8%8E%E6%B3%95%E6%B2%BB">思想道德与法治</a></li><li><a href="#%E4%B8%AD%E5%9B%BD%E8%BF%91%E7%8E%B0%E4%BB%A3%E5%8F%B2%E7%BA%B2%E8%A6%81">中国近现代史纲要</a></li><li><a href="#%E6%96%B0%E4%B8%AD%E5%9B%BD%E5%8F%B2">新中国史</a></li><li><a href="#%E5%88%9B%E4%B8%9A%E5%90%AF%E7%A8%8B">创业启程</a></li></ul></li><li><a href="#%E5%90%8E%E8%AE%B0">后记</a></li></ul><h2 id="数理基础课">数理基础课</h2><h3 id="微积分（甲）I">微积分（甲）I</h3><ul><li><p>学分：5.0</p></li><li><p>教师：朱静芬</p></li><li><p>教材：《微积分》第3版，苏德矿等著</p></li></ul><p>zjf 老师是我目前遇到过的精力最充沛的老师：她上课的时候喜欢在讲台周围走来走去（<s>即使有一次腿受伤了也坐不住，到后来还是站起来了</s>），和我们有说有笑，给人的感觉亲切友好。得益于老师的活力四射，虽然是早八的课，我的困倦感并没有像以往那样强烈。老师主要是用 PPT 上课的，偶尔会写点板书（但也只是在讲解题目的时候用到），这些 PPT 是不错的复习资料。每次课后老师都会布置作业，习题课的时候上交，由助教批改和讲解（<s>助教gg真的帅，又很有实力</s>）。小测的话会在线下举行，但线上（xzzd）答题，都是选择题<span class="heimu">（你懂得，但我没那个胆量）</span>。</p><p>vgf 的重头戏还是期中和期末考试，相比下学期的 vgf，只要平时跟上教学进度，考前一两周来集中突击一下（整理知识体系&amp;刷历年卷），应该可以拿到理想的分数（要想总评分数高，建议期中考分数尽量在八九十分以上）。从我们 23 级开始，期末考试都出现了填空<span class="heimu">（据说是 THU 的老师出题）</span>，题号上虽然多了一题，但是由于 vgf I 的难度相对适中，所以实际题量并没有变多，如果还是觉得时间不够用的话，平时刷历年卷的时候应该再训练一下速度。bz 虽然期末炸了，但是期中考得不错，因此总评分数还算不错的（事实上给分挺好的，因为 dd 群有很多“谢谢老师”的留言）。最后墙裂推荐选 zjf 姐姐的课！</p><h3 id="线性代数（甲）">线性代数（甲）</h3><ul><li><p>学分：3.5</p></li><li><p>教师：汪国军</p></li><li><p>教材：《线性代数》，黄正达等著</p></li></ul><p>wgj 老师人也很好，讲课的时候常常会问我们有没有听懂某个知识点，如果没有的话他还会再讲解一遍，相当地有耐心。他不用课件，每节课主要通过手写的形式讲解课本知识，也会覆盖到课后习题的补充知识。虽然课讲得不错，但是线代这门课的上限被这本shi一样的教材给限制住了：虽然这门课叫做「线性代数」，但很多知识点涉及到几何知识，但整本教材几乎没有几何上的解释，因此这门课给我最大的感受就是「抽象」二字。所以，我在这里强烈推荐油管网红 3b1b 的「<a href="https://www.youtube.com/watch?v=fNk_zzaMoSs&amp;list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab">线性代数的本质</a>」系列视频，他用生动的动画，从几何的角度为我们解读线代相关的概念和知识，这给了我很大的启发。此外再推荐阅读图灵班学长编纂的教材<a href="https://github.com/yhwu-is/Linear-Algebra-Left-Undone">《线性代数：未竟之美》</a>，虽然当时我没有看过（有点感到遗憾），但是我相信这本书可能是更加符合 ZJU 学生体质的教材（wyy yyds!）。</p><p>作业一般课后布置，习题课上交作业。习题课上一般用来讲作业；小测也在习题课上进行，一共 4 次小测（从 23 级开始没有期中考了，改为一次小测了），题量大概是 4-5 个大题目，难度不是很大（<s>前提是基本理解知识点</s>）。期末考是最重要的，需要花费相当的精力备考，我的复习安排和 vgf 的差不多。尽管刷了很多历年卷，但是期末考仍旧不太理想，会做的题粗心做错了（<s>第一题就寄了</s>）。给分上还算相当慷慨的，老师会捞的，所以大胆选 wgj 老师的课。</p><h2 id="专业基础课">专业基础课</h2><h3 id="C程序设计基础及实验">C程序设计基础及实验</h3><ul><li><p>学分：4.0</p></li><li><p>教师：袁波</p></li><li><p>教材：《C语言程序设计》第4版，何钦铭等著</p></li></ul><p>上课的学生可以分为两类人，一类是之前有过编程经验，也参加过信息竞赛的同学，一类是第一次接触编程的同学，因而有两种不同的学习方式：对于前者，大可不必听老师的课，把这门课当作自习课（一定要来，签到次数较多且随机），只要课后花点时间做作业，小测或考试前复习一下知识点，着重抓一些易错点和难点即可；对于后者，也许应该要好好听课了<span class="heimu">（虽然曾经有过信息竞赛的经验，但我由于初来大学课堂，变通的速度过慢，因此我还是傻乎乎地听了每一次的课，现在有点后悔自己浪费了大量的时间做低效的事情）</span>。</p><p>yb 老师给我的感觉是中规中矩：基本照着内容完备的 PPT 讲解，有时也会额外拓展讲解一些稍微深入一点的东西。除了布置每周的作业外，他还在 PTA 上开放了一个题库，让我们在空闲的时候练练手，难度不大。小测共 4 次，在上机课进行，比作业题稍难，但也还好（<s>然而我总是错在一些坑上，导致分数不太高</s>）<span class="heimu">（就是后面考链表的时候大多数同学的成绩比较惨一些）</span>。接近期末的时候有一次上机考试，好像是 2 道编程题，有一个斩杀线，如果没过这个线，这门课就挂掉了，大部分同学都能过这条线。期末考是纸质考试，考理论知识，主要看是否够熟悉 C 语言，刁钻的题不多吧，只要足够细心就行<span class="heimu">（bz 因为期末考的不错，所以拿下第一个满绩）</span>。</p><div class="note blue icon-padding flat"><i class="note-icon fas fa-pencil"></i><p>如果还有空闲时间，推荐初次学习编程的同学学习 <a href="https://cs50.harvard.edu/x/2024/">CS50x</a>，覆盖了包括 C 语言在内的很多计算机基础知识，上课氛围轻松生动，值得一看。</p></div><h2 id="通识课">通识课</h2><div class="note green icon-padding flat"><i class="note-icon fas fa-check"></i><p><s>上完一学期的通识课后，我成功把这些课转化为我的自修课了(doge)</s></p></div><h3 id="大学英语-IV">大学英语 IV</h3><ul><li><p>学分：3.0</p></li><li><p>教师：阎建玮</p></li><li><p>教材：《新编大学英语3》综合教程 + 视听说教程</p></li></ul><p>课程安排的具体细节不再赘述（<s>因为我几乎忘记了</s>），对我来说比较麻烦的是单词听写（每一次听写很多很多的生词，有点棘手）、口语考试（i人噩梦，我考试的时候直接卡壳，总评分数被它拖后腿了）和期末考（也有一堆生词，难度大概介于四级和六级之间）。由于 yjw 老师人特别随和、有耐心（可能因为他是刚来不久的年轻老师），因此课堂氛围比较轻松活泼。个人觉得有一点不足之处是阎老师显然没有把握好课堂节奏，因为前面讲课拖得时间过长，到了期末后面的课差点来不及上完了，这可能是因为老师缺乏教学经验吧。但是总而言之，他还是一位好老师，值得一选。</p><h3 id="思想道德与法治">思想道德与法治</h3><ul><li><p>学分：3.0</p></li><li><p>教师：俞鼎</p></li><li><p>教材：《思想道德与法治》2023版</p></li></ul><p>yd 老师也是一位年轻老师，他给我最大的印象是「直爽」：说话直截了当，不会拐弯抹角，比如小组展示的时候更倾向批评式教育（但给人的感觉不难受，因为他还是笑着说的），也不会自讨没趣让开小差的同学回答问题等等。虽然没有课后小作业，但是有零碎的大作业：读书报告、志愿服务、小组展示等等。稍微提一下小组展示：每个组选择老师给定的课题（如果有实力也可以自己选定课题），按小组顺序每周展示一组，共两轮。我还算运气比较好，除了一个人几乎没有贡献外，所有人都积极配合，完成自己部分的工作，最后也得到老师的肯定（我们是最后一组（吸取了前面小组的诸多教训，也因为假期冲掉了一轮 doge），老师给予我们罕见的赞美之词，Wow）。期末考是开卷考，都是大题，好像是挑几道大题做。考前建议稍微熟悉一下课本知识点，便于快速翻书。最后给分不错，应该是因为期末发挥稳定 + 小组作业贡献度高。</p><h3 id="中国近现代史纲要">中国近现代史纲要</h3><ul><li><p>学分：3.0</p></li><li><p>教师：丁乙</p></li><li><p>教材：《中国近现代史纲要》2023版</p></li></ul><p>类似德法课吧，除了将志愿服务等作业换成较为麻烦的口述史作业（如果是秋冬学期，建议国庆假期回家的时候做，个人认为线下交流比打电话效果更好）。后来我将这门课几乎当作自修课上（<s>除了偶尔会被一些历史影视作品的片段吸引住了，我对历史比较感兴趣</s>）。老师给了相当多的课堂回答机会，可能想让我们多拿点分吧</p><h3 id="新中国史">新中国史</h3><ul><li><p>学分：1.5</p></li><li><p>教师：赵晓红</p></li><li><p>教材：《新中国史》（不要买！！！用不到的）</p></li></ul><p>事少给分高的好课。半个学期八节课（实际上只有七节，国庆冲掉一节），每节课都有不同的老师授课，分别讲不同的主题。平时完全可以摸鱼，但我记得有一两个老师喜欢叫人回答问题，稍微提防一下；但还是要来的，因为签到次数较多且随机。只有一个期末论文，主题和课程有关，字数在 2k-3k 左右（我记得是这样，限制了卷字数）。因此四史里面我推荐新中国史</p><h3 id="创业启程">创业启程</h3><ul><li><p>学分：1.5</p></li><li><p>教师：李浩</p></li><li><p>教材：忘记了（<s>课本也被我丢了</s>）</p></li></ul><blockquote><p>我是历史学家，这就是史</p></blockquote><h2 id="后记">后记</h2><p>从这篇课程回忆录开始，我实在不敢再拖到这么久再补写了：既没有多少动力，也忘记了很多东西，实在不太好写。这篇文章可能没有什么价值，就当做我过去大学一年生活的留念吧！</p>]]></content>
      
      
      <categories>
          
          <category> 课程回忆录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZJU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安全攻防实践 短学期课程（CTF-101）课程回忆</title>
      <link href="/posts/589a8ab1.html"/>
      <url>/posts/589a8ab1.html</url>
      
        <content type="html"><![CDATA[<h2 id="总体评价">总体评价</h2><ul><li>课程难度：⭐ ⭐ ⭐ ⭐</li><li>推荐指数：⭐ ⭐ ⭐ ⭐ ⭐</li></ul><h2 id="课程学习内容">课程学习内容</h2><div class="note icon-padding flat"><i class="note-icon fas fa-circle-info"></i><p>先修要求：</p><ul><li>具体可以参考 <a href="https://courses.zjusec.com/intro/lab0/">Lab 0 的作业</a>（也作为报名必交材料），个人建议至少得了解 Linux 命令和 Python 的基础语法（之后应该会写很多 Python 脚本），Web 方向建议掌握 MySQL 和 JavaScript 的基本语法，Rev 和 Pwn 方向需要了解汇编语言（如果是信安专业的话应该已经学过了，<s>像我学CS专业的没有学很后悔，只能到下学期听小白老师的课</s>）。如果这些都没学过也没关系，可以边做 Lab 边学（当然这比较痛苦，早点学还是有好处的）。</li><li>做好心理准备，虽然给分很好（根据以往评价，目前作业上交还未截止），但是课程内容方向广、难度大，而且十分注重实践，因此需要一颗不怕折腾、敢于探索新知识的心。</li><li>报名材料：<a href="https://courses.zjusec.com/#_1">戳这</a>（我记得好像只给了一周多的时间准备材料，所以需要腾出一段时间来准备）</li></ul></div><p>CTF-101 是由浙江大学 AAA 战队开设的一门短学期课程，主要讲授 CTF（Capture The Flag，夺旗赛）竞赛的五大方向的知识：Web（网络）、Misc（杂项）、Pwn（二进制）、Rev（逆向）、Crypto（密码学）。</p><p>课程持续两周：第一周是基础周，下午上课，学习这五个方向的基础知识；第二周是专题周，下午和晚上均有可能上课，自行选择其中的<strong>至少两个方向</strong>的专题，每个方向有两节课，学习进阶内容。第一天主要介绍课程大致情况以及 Lab 0 的作业讲解，最后一天请原 AAA 战队，现已毕业的学长过来作一次讲座。</p><h2 id="任课老师">任课老师</h2><p>虽然课程表面上是由常瑞和申文博老师授课，但他们分别只在课程开头和结束时出面，基本上都是由 AAA 战队成员授课，每天几乎都由不同的学长进行授课<span class="heimu">（如果看到一个学长上过两次课，那证明他的实力一定很强）</span>。各位学长都是久经磨练的“老赛棍”了，实力自然毋庸置疑，课程内容都是精心准备过的，这一点远超计院的某些课程。但是每位学长风格迥异，且有些学长是初次授课，因此教学质量参差不齐也是在所难免（<s>如果要我上台授课，那我的表现可能更加糟糕</s>）。尽管如此，我认为学长授课的一大好处是与我们之间的隔阂很小，大家遇到问题可以尽管向学长提问，学长们会尽其所能向你解答（前提是在问问题之前得展示自己的努力过程，参考<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md">提问的智慧</a>）。</p><h2 id="分数构成">分数构成</h2><ul><li>出勤分（5%）：基础周全勤 + 专题周4次签到（每个方向两次课）</li><li>基础周 Lab（55%）：Lab 0（5%）+ 每个方向的 Lab 1（5 * 10%）</li><li>专题周 Lab（40%）：（至少）两个专题，每个专题有两个 Lab，每个 Lab 占 10%</li></ul><p>每个 Lab 都有 Bonus（假设Lab 满分为100分，那么 Bonus 会多出15分），但基础周的 Bonus 和专题周的 Bonus 是独立、互不溢出的，所以拿高分应该还是比较容易的（目前看法，等出分的时候再确定）。</p><h2 id="个人感受">个人感受</h2><p>我当初选这门课的原因很多，有在阅读图灵班学习指南的过程中发现这门“宝藏课程”，有短学期课程的宣传，也有学长的大力推荐<span class="heimu">（给的分实在太好了）</span>，而且我自己也想学一些可能在其他课上学不到的一些知识，因此我决定报名这门课。其实当初做 Lab 0 的痛苦经历曾几度将我劝退，但是可能出于自尊和想要变强的渴望，我还是挺过来了。尽管 Lab 0 没有完全完成，但我尽可能地将自己的思路写上去了，同时附上一份几乎没有什么含金量的简历，但好在“功夫不负有心人”，最终报名成功了，记得那时的我可是相当高兴呀😄。</p><p>考试周之后不就便迎来了这为期两周的课程。我还记得第一节课我特地提前半小时到教室，结果教室里近乎座无虚席，我只能坐在前排了（其实对于喜欢的课，我也挺高兴坐在前排）<span class="heimu">（但之后来的人慢慢减少，到了最后一天只来了二十几个人）</span>。在这两周内，光是在教室里听，我就学到了很多的知识，当然课后也得花点时间学一些解决Lab需要的知识，下面简单列举一些（标⭐表示我专题周选择的方向）：</p><ul><li>⭐Web：计网基础知识、SQL 注入、PHP 和 JS 相关的漏洞</li><li>⭐Misc：编解码知识、OSINT、图片和音像隐写技巧、流量和内存取证、区块链基础知识（<s>以及很多的妙妙小工具</s>）</li><li>Rev：深入了解汇编、编译、链接的原理，ELF文件的静态和动态逆向</li><li>Pwn：代码注入漏洞（Shellcode）、栈溢出漏洞</li><li>Crypto：古典密码学、现代密码学知识<span class="heimu">（成功将数理基础很差的我劝退）</span></li></ul><p>这几个方向我比较喜欢 Misc，因为感觉比较容易上手（<s>简单的题可以直接用工具秒了</s>）。因为去年 Misc 简单（<s>在上Misc 专题二之前我也是这么想的</s>），很多人选了 Misc，结果今年就给 Misc 上点强度，新增了区块链相关的内容。但是由于是全新的内容，当时我在线下听得迷迷糊糊的，到后面基本就没在听。等到做题的时候就傻了——完成私链部署的区块链题目，但是由于智云录课效果很差（没有把大屏的实时演示录进去）+ 少录了一小时，导致我不知所措，折腾了好几天都没有搞清楚怎么部署私链。但好在过几天 xg 后来补上了区块链的视频，解决了我的燃眉之急（xg 伟大，无需多言）。</p><p>而选择 Web 主要是根据我大学一年的学习经历：数理基础差，Crypto直接 pass 掉；没学过汇编 + 我的学习速度慢，Rev 和 Pwn 也 pass 掉了；学过Web前端技术栈 + 上过“无线网络应用”的课程，于是我自然选择了 Web 方向。说来惭愧，除了上面列举过的 Web 知识，其他内容我现在遗忘得差不多了，我想暑假后半段开始自学一下相关知识，准备参加一下今年的 CTF 校赛。</p><p>总体而言，这门课不仅让我学到了很多方向的新知识，以及许多有用的工具和方法<span class="heimu">（我逼自己用 Typst 写报告，因而成功熟悉了 Typst）</span>，还让我更深刻意识到<strong>自学和实践</strong>的重要性：课上的知识固然要听，但课后不花出时间努力，那么就一定无法掌握好这门课需要学到的东西（现实点说，就是做不好 Lab）。这是一门又痛苦又享受的课，我墙裂安利！</p><p>以下是我对课程的一些小建议：</p><ul><li>课件最好统一一下，个人比较喜欢用 xg 的 reveal-md 模板做的在线课件（暑假也打算学一下）。每位学长的PPT的风格大相径庭，有些PPT可读性有些差（有字太小、逻辑混乱等问题），导致课后回顾的效果不佳。</li><li>智云课堂的录屏问题，感觉是这间教室的问题，希望下次换一个更大的教室，有一个更好的录屏效果（课后看录屏太折磨啦~）。</li><li>这个建议可能不太合理：希望基础周的ddl统一定为最后一个lab 1的ddl（可以将所有的报告打包在一起），专题周的每个专题的两个lab的ddl都定为后一个lab的ddl，因为我本来想在课后好好消化一下课上学到的知识，做一些笔记之类的，结果因为我担心两周后的ddl，所以就得赶lab，但是做完（甚至还没做完）一个lab后，第二天就得学新的知识，又有新的lab，这样我每天的状态几乎是“疲于奔命”，每天忙于各种滞后的lab作业，导致我到后期学习起来感觉有一种说不出的压抑感。如果按照我的建议做，我每天课后就能腾出时间先整理课上讲过的知识，之后剩余的时间做lab，时间分配更加合理，且减少了一些（可能只有我有的）心理负担，这样学习起来更有效果、更有动力。</li><li>希望每天的lab能够在课后及时布置，最好稍微提前一点布置，理由类似上一条建议。</li></ul><h2 id="资源">资源</h2><ul><li><a href="https://courses.zjusec.com/">CTF-101 课程网站</a></li><li><a href="https://ctf-wiki.org/">CTF Wiki</a></li><li>刷题网站：<a href="https://zjusec.com/">校巴</a>（内网访问）、<a href="https://ctf.zjusec.com/">比赛平台</a>（内网访问）、<a href="https://buuoj.cn/">BUUCTF</a></li><li><a href="https://note.noughtq.top/sec/ctf-101/">我的笔记</a>（残缺版，之后会更新）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 课程回忆录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZJU </tag>
            
            <tag> CS </tag>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大一春夏 课程回忆录</title>
      <link href="/posts/41bc90c8.html"/>
      <url>/posts/41bc90c8.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>这个课程回忆录本应在七月初就完工的，但是当时脑子一热忙着搭博客（<s>而那个博客框架我现在放弃了，所以我那几天白干了</s>），所以没有开始动笔。一直到七月下旬回到家后完成短学期作业，我才想起来应该记录一下这个学期我到底学了什么，有什么是值得和大家分享的，以此见证我这半年来的学习之旅。这是我第一次写长篇的经验帖，可能在表述上、内容上有些问题，请多多包涵🙏</p><h2 id="目录">目录</h2><ul><li><a href="#%E6%95%B0%E7%90%86%E5%9F%BA%E7%A1%80%E8%AF%BE">数理基础课</a><ul><li><a href="#%E5%BE%AE%E7%A7%AF%E5%88%86%E7%94%B2ii">微积分（甲）II</a></li><li><a href="#%E5%A4%A7%E5%AD%A6%E7%89%A9%E7%90%86%E4%B9%99i">大学物理（乙）I</a></li></ul></li><li><a href="#%E4%B8%93%E4%B8%9A%E5%9F%BA%E7%A1%80%E8%AF%BE">专业基础课</a><ul><li><a href="#%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8">离散数学及其应用</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80">数据结构基础</a></li><li><a href="#%E6%95%B0%E5%AD%97%E9%80%BB%E8%BE%91%E8%AE%BE%E8%AE%A1">数字逻辑设计</a></li></ul></li><li><a href="#%E7%9F%AD%E5%AD%A6%E6%9C%9F%E8%AF%BE%E7%A8%8B">短学期课程</a></li><li><a href="#%E9%80%9A%E8%AF%86%E8%AF%BE">通识课</a><ul><li><a href="#%E9%A9%AC%E5%85%8B%E6%80%9D%E4%B8%BB%E4%B9%89%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86">马克思主义基本原理</a></li><li><a href="#%E6%8E%A7%E5%88%B6%E8%AE%BA">控制论</a></li><li><a href="#%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8">无线网络应用</a></li><li><a href="#%E8%8B%B1%E8%AF%AD%E7%9F%AD%E7%AF%87%E5%B0%8F%E8%AF%B4%E6%AC%A3%E8%B5%8F">英语短篇小说欣赏</a></li><li><a href="#%E4%B9%92%E4%B9%93%E7%90%83%E5%88%9D%E7%BA%A7%E7%8F%AD">乒乓球（初级班）</a></li><li><a href="#%E8%BA%AB%E4%BD%93%E7%B4%A0%E8%B4%A8%E8%AF%BE">身体素质课</a></li></ul></li></ul><h2 id="数理基础课">数理基础课</h2><h3 id="微积分（甲）II">微积分（甲）II</h3><ul><li><p>学分：5.0</p></li><li><p>任课老师：张泽银</p></li><li><p>教材：《微积分》(下)，第3版，苏德矿等著</p></li><li><p>分数构成：考勤 5% + 作业 15% + 小测（2次）2 * 10% + 期中 20% + 期末 40%</p></li></ul><p><strong>平时</strong></p><p>zzy老师喜欢一边用 PPT 讲解，一边在黑板上写板书，虽然有浓重的口音，但是绝大多数话都是听得清楚的，不必担心。课程政策相比其他微积分的老师有很大的不同，对于摸鱼的同学而言那简直就是天堂，除了期中期末都可以很轻松地混过去（<s>但到了期中期末就是火葬场了</s>），甚至平时的课都可以翘掉（<s>比如我</s>）（<s>偌大的教室里没有只有二十来位同学听课</s>）：</p><ul><li>他好像只负责授课，考勤、作业、小测之类的都是由助教gg负责</li><li>没有 MOOC 要求</li><li>小测的题目来自课后习题，都是主观题（会狠狠地捞，<s>我记得第二次小测做对的题不到一半都有96分</s>）</li><li>没有签到，只要小测来了就行</li></ul><p>但是我在这里提醒一下：可以翘课，但要保持微积分的学习。因为这不仅是一门5学分的硬课，它的难度相比微积分（甲）I 又上了一个台阶，虽然空间解析几何相对简单，但后面什么多元函数微分学、二重积分、三重积分、级数之类的如果不及时理解的话，等到后面做题的时候就连题目都看不懂了。所以我的学习方法是：</p><ul><li>平时<strong>笔记</strong>一定要跟上，而且确保自己已经彻底理解这周讲的知识点，按时完成布置的作业</li><li>将小测作为回顾知识点的警钟，至少提前一周复习小测范围内的知识</li><li>期中、期末考前至少提前半个月（对我来说应该要提前更多，现在很后悔）进行总复习，可以通过<strong>刷历年卷</strong>发现哪些知识点还没有掌握。建议<strong>多刷题</strong>，因为考试计算量相比微积分 I 提升了不少，通过刷题提升解题速度是很有必要的（我就是因为没有多刷题导致期末计算磕磕绊绊，最后时间来不及了（悲））。</li></ul><p><strong>期中 &amp; 期末</strong></p><p>期中考试的难度中规中矩，个人感觉还是比较合理的。期末考试貌似是一年比一年难，但论抽象还是去年的更离谱，今年的计算量很大，并且延续上次微积分 I 期末考试 8道填空 + 7道大题的风格。个人认为算一道填空题并不会比算一道大题快多少（除非有什么技巧），而且算错了没有过程分，难度也就上来了。所以这次期末考试狠狠惩罚了从高中开始就不爱刷题的我，让我第一次感受到考试铃结束后还有很多题做不完的痛苦。</p><p><strong>资源</strong></p><ul><li>路老师的公众号（历年卷）</li><li><a href="https://note.noughtq.top/math/calculus/">我的笔记</a></li></ul><h3 id="大学物理（乙）I">大学物理（乙）I</h3><ul><li><p>学分：3.0</p></li><li><p>任课老师：汪玲</p></li><li><p>教材：《工程物理学》第2版，诸葛向彬著</p></li><li><p>分数构成：</p><ul><li>平时：16次作业（16%） + 4次小测（4 * 6%）= 40%，班级内<strong>线性赋分</strong>（史），得分区间为28-40分</li><li>期中：20%，考相对论之前的内容</li><li>期末：40%，主要考期中之后所学内容</li></ul></li></ul><p>这门课我本来是不想说的，但它毕竟值3个学分，所以我还是简单说说吧（<s>即使它是一坨*</s>）。</p><ul><li>个人感觉大学物理 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≈</mo></mrow><annotation encoding="application/x-tex">\approx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4831em;"></span><span class="mrel">≈</span></span></span></span> 高中物理 + 微积分，也会新学一些东西，但它不像高中物理那样考察技巧性的东西。由于从小到大物理都是我最讨厌的且表现最差的一门课，所以平时都是水过去的，但我会在小测之前整理之前所讲部分的常用公式（我同时参考课件和SAVIA学长的笔记），而且也会看看作业中的错题，这样应付小测还是没问题的。</li><li>关于 wl 老师（省流版）：如果想要认真听课的话，不推荐选 wl 老师，她只会念 PPT，而且经常卡壳到我无法忍受的地步；想要水的话，墙裂推荐选 wl 老师，因为没有签到要求（<s>可随意翘课，只要小测来一下就行</s>）。</li><li>期中期末的话，我的复习方法是前面提到的小测复习法 + 刷几套历年卷，做完历年卷后记得回顾错题，一定要知道自己为什么错，以及弄清正解的思路，否则刷了也是白刷。这样的方法很适用于风格基本一成不变（<s>套公式</s>）的大雾考试，但是今年的期中期末新增了选择题的题型，而且期末貌似难度变大了（<s>也许</s>是我太菜了，我期末直接爆炸）。</li></ul><p>资源：</p><ul><li><a href="https://savia7582.github.io/Exterior/Physics/">SAVIA 学长的大物笔记</a></li></ul><h2 id="专业基础课">专业基础课</h2><h3 id="离散数学及其应用">离散数学及其应用</h3><ul><li><p>学分：4.0</p></li><li><p>任课老师：林兰芬</p></li><li><p>教材：<em>Discrete Mathematics and Its Applications</em>, 8th Edition</p></li><li><p>分数构成：作业 10% + 两次小测 2 * 10% + 期中 20% + 期末 50%，课堂发言会有额外加分（到了后期确实有的）</p></li></ul><p><strong>平时</strong></p><p>这应该是我上过的第一门用英文教材和课件的课程，刚开始确实不太适应，不是因为遇到很多的生词，而是大脑将英文转化为中文需要花一些时间，所以阅读起来会比较慢，但是很快便适应了这种情况。个人认为 llf 老师教学质量还算不错，至少大部分知识讲得还是比较清楚的，而且也会有一些拓展（有些来自课后习题，有些则是课本未提到的），所以需要认真听课。但是她的英语口语实在太拉了，很多英文单词发音都是错的，导致我听得很难受。虽然上面的分数构成没有包含考勤分，但这不代表不需要到教室听课，有一次教室里的人太少，老师直接纸质签到了。</p><p>小测和期中都是 llf 老师自己命题，在课上花一到两节课的时间进行考试，考试会提前一到两周进行通知，到时候就一定要开始复习啦。题目难度适中，个人认为只要理解了每个知识点，问题应该不是很大。</p><p>关键就在于离散数学这门课的知识点可是出了奇的多、广、杂，而且有些知识点还有些难度，所以想要速成基本是没辙的，需要平时脚踏实地地学习，根据教材（强烈建议啃英文原书，不要买中文翻译版！）和课件<strong>梳理好一个完整清晰的体系</strong>。强烈建议做一份<strong>笔记</strong>，不求十分精细，只要对自己掌握离散数学的知识体系就行。</p><p><strong>期末</strong></p><p>期末考前首先要确保自己掌握所有的知识点，然后一定要做一下历年卷，感受一下题型和难度，及早查漏补缺。<u>建议一定要完完整整地过一遍所有的历年卷，最好给自己准备一场模拟考</u>，不要像我一样就挑几道题做，否则到了考试的时候就不知道怎么给自己合理分配时间了。再来说这次期末考试，考试难度感觉没有超过那些历年卷，考点侧重于集合、关系、图论这些知识（就我印象而言，这些题目占多数），但是我复习的时候是全方位均衡发展，没有什么侧重点，导致前面说的这些知识点掌握程度还是不够深，自然考得也不理想了，最后总评成绩可想而知。</p><p><strong>资源</strong></p><ul><li><a href="https://note.noughtq.top/math/dm/">我的笔记</a></li><li><a href="https://oneko.zone/zju/dm/">Oneko 学长的笔记</a></li><li><a href="https://www.yuque.com/linguisty/zju_courses/discrete">kaleo 笔记</a></li></ul><h3 id="数据结构基础">数据结构基础</h3><ul><li><p>学分：2.5</p></li><li><p>任课老师：陈越</p></li><li><p>教材：<em>Data Structures and Algorithm Analysis in C</em>, 2nd Edition</p></li><li><p>分数构成：</p><ul><li>平时分 60% <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> 作业 10% + 小测 10% + 期中 15% + Projects 25%/30% + Bonus 4%</li><li>期末 40%</li></ul></li></ul><p><strong>平时</strong></p><p>关于分数构成：</p><ul><li>作业和当天的课件都布置在 PTA 上，如果某一道编程题太难，做了半天也没有完全做对，而且时间上也紧张的话可以放心跳过，因为作业分的影响不大。</li><li>有4次<strong>随机</strong>的小测，在上课的前10分钟内在 PTA 上做题，题目都是平时作业错误率较高的题目，会有编程题，所以需要带上电脑（<s>否则像我一样小测编程题都空着hh</s>）</li><li>一共有3个Project，有 Normal 和 Hard 两个难度，根据开学初上机考试的成绩分配名额，分数高的同学可以选择 Hard（换句话说也可以放弃 Hard 选 Normal，但是我不建议这么做），选 Hard 比 Normal 多5分，所以想要拿高分的同学应该争取拿下 Hard 的资格。但是 Hard 确实有一些难度，尤其是第二个 Project 要写一个自动微分的代码，可能会花费比 Normal 多得多的时间，要做好心理准备。</li><li>Project 采取互评<span class="heimu">真史</span>机制，具体规则不细说了，各位可能会遇到给你随便打低分的人，不用特别担心，只要你的Project做得好，TA 自然会出手的。</li><li>Bonus 由2道编程题构成，每道题2分，难度不大，甚至比某些作业题简单，但是记得按要求提交，建议做。</li><li>个人经验而言，作业和小测做得再烂对平时分的影响不是很大（<s>因为我就做得很烂</s>），关键是 Project 一定要认真做，而且一定要按照要求做（比如删除个人信息等），否则就是白做（<s>lz 血的教训，唯一一位不小心泄露个人信息的 Hard 选手</s>）。</li><li>如果期末成绩 &gt; 期中成绩，期中成绩可用期末的覆盖。所以期中不是特别要紧，期末一定要做好十足的准备。</li></ul><p>虽然cy姥姥因为某些原因评分不高，但是她的课是值得一听的，毕竟实力就摆在那里。就我个人而言，上课体验是很好的，姥姥看起来慈祥和蔼，上课节奏适中，能够将知识点讲得比较清楚，而且姥姥的英语口语是真的强。就算课上没有听懂姥姥讲的，还可以到<a href="https://www.icourse163.org/course/ZJU-93001?%20appId=null&amp;outVendor=zw_mooc_pcsslx_">中国大学 MOOC</a>上看更详细的版本，由于受众更广所以讲得更详细些。</p><p>我平常会先过一遍教材和课件后做当天所讲内容的笔记，然后开始做作业（不然作业错误率有点高看着难受）。Project 我一般在周末做（其实周三上课后就布置下来了），尽量花两天时间解决掉，但往往会拖到周一（<s>翘掉微积分和大雾做 Project</s>）。虽然第一次做 Project 的时候犯了不该犯的错，但是后面做 Project 的时候不断进步，报告写得越来越整洁规范，最后的 Project（我在互评的时候看到有人用 mem 佬的模板撰写报告，看着很美观，然后开始用 Typst 写报告）甚至被姥姥表扬了，当时我十分高兴😄。</p><p><strong>期末</strong></p><p>我的复习方法是根据笔记回顾所有的知识点 + 刷历年卷，如果刷题过程中遇到想不通的点一定要去搞懂，可以在群里大胆提问（记得期末那几天群里的讨论可是相当热烈）。注意期末考试是有函数题的，所以如果好久没有敲过代码的话考前请务必熟悉起来。期末共有 10 道判断 + 20 道单选 + 2 道程序填空 + 1 道函数题。函数题之外的题目建议在一个小时内解决，剩下一个小时对付这道函数题。个人感觉题目难度不是特别大，只要熟悉各种题型（历年卷都出现过，没有什么新题型）并熟练掌握解题技巧的话应该能应付过去，但是想要拿高分的话需要兼具速度和细心（<s>像我这种粗心惯的人期末自然💥</s>）。</p><p><strong>资源</strong></p><ul><li><a href="https://note.noughtq.top/algorithms/fds/">我的笔记</a></li><li><a href="https://note.tonycrane.cc/cs/algorithm/ds/">xg 的笔记</a></li><li><a href="https://xuan-insr.github.io/math_ds_algo/getting_started/">咸鱼暄学长的ds入门路线</a></li></ul><h3 id="数字逻辑设计">数字逻辑设计</h3><ul><li><p>学分：4.0</p></li><li><p>任课老师：张明敏 &amp; 洪奇军</p></li><li><p>教材：<em>Logic and Computer Design Fundamentals</em>, 5th Edition</p></li><li><p>分数构成：小测 25% + 实验 30% + 大程（Project）15% + 期末 30%</p></li></ul><p><strong>理论课</strong></p><p>理论课由zmm老师授课。个人十分不喜欢她的课：</p><ul><li>首先，她为了解释某个概念，会打很多的比喻，什么高铁、服务员之类的乱七八糟（古希腊掌管比喻的神），导致我根本不想顺着她说的继续听下去。她对此给出的理由是我们从未接触硬件课，因此需要用这些通俗的比喻来帮助理解。但是她更喜欢在简单的概念上做这些比喻，重难点知识讲得并不是很清楚。所以想要认真听课的同学千万不要选zmm</li><li>其次，她的 PPT 质量我简直忍无可忍，真的是又丑又乱，这给我做笔记带来了不小的麻烦。好在后来有群友发了蔡铭老师的课件（又美观又逻辑清楚），对比之下我直接抛弃zmm的课件，并且花了几天时间，根据cm老师的课件重写了我之前的笔记。所以，我的数逻课基本都是自学成才的（<s>zmm还说自学是学不好的，信她的鬼话</s>）。自学选手请认准cm老师的课件和智云回放。</li></ul><p>今年zmm的小测方式有所调整，以前会有四五次小测，今年只有两次小测，但是每次小测的量比之前的多（要花两个小时）。题目不难，据zmm说均来自历年卷中（错误率高）的题目（<s>但由于我的理解速度比较慢，小测范围内的知识点还没有完全消化进去，所以小测拿了两个B（悲）</s>）。</p><p><strong>实验课</strong></p><p>实验课由洪奇军老师（很神秘的人，査老师、甚至教室主页上都没有此人）负责。前面几节课主要是熟悉设备、在 SWORD 板上连接电路之类的，照着PPT做还是比较容易的。之后都是在 Vivado 创建工程文件，写 Verilog 代码（前期会用到 Logisim 画电路图再转化成 Verilog 代码，但是后期就直接写代码了，主要参考瓜豪gg的文档和课件），烧录到 SWORD 板来实现功能。个人认为有一点不合理之处：由于理论课和实验课老师不是由同一个人负责（有些老师是理论实践均负责的），因此会出现理论和实践进度不匹配的情况，这样不助于同学理解理论知识和完成实验。Verilog 需要自学，学习难度不大，语法可以参照菜鸟教程，如果想要实操练习的话推荐HDLBits（链接贴在下面），它不仅有很多题目（难度不大，很适合新手做），而且还提供了类似OJ的平台，可以在线提交代码判断正误。如果想要摸鱼的话，大可以参照前辈们的报告，然后较为轻松地完成实验，但是因为最后的大程还是得自己写，这样偷懒只会将问题越堆越大，对大程的完成和期末复习很不利。</p><p><strong>大程</strong></p><p>大程要求 2-3 人一组设计一个能在 SWORD 板上运行的小游戏，比如俄罗斯方块、飞机大战之类的，拓展要求（但实际上几乎所有同学都做的）为使用PS2接口的键盘等外接设备。刚开始做的时候可谓相当痛苦，因为除了要熟悉 Verilog 语法外，还得花一些时间弄清楚 VGA 等外设、IP核的工作原理，学习曲线可谓相当之陡峭。但好在有前辈的资料（见下面资源）以及我同组同学的解释，我才逐步搞清楚这些原理。我们组在SWORD板上复现一个（<s>阉割版</s>）Chrome 恐龙跑酷游戏，在彻底搞懂VGA等的原理后，游戏逻辑部分的代码撰写起来还是相对比较轻松，只不过之后的绝大多数时间都花在了漫长的调试上了（<s>其中等 Vivado 烧录的时间超过一半以上，真的太慢啦</s>）。虽然我们的游戏还有一些明显的bug（比如某些物体的贴图的左侧一部分移到了最右侧，<s>是不是很神奇</s>），但是分数给的很不错（hqj 认为恐龙下蹲是一个创新点，<s>这难道不是基本动作吗</s>），有些出乎我的意料。</p><p><strong>期末</strong></p><p>由于我手边只有一份历年卷，所以我就将大部分的复习时间都花在了理解知识点上（虽然做了笔记，但是有些地方还是不太理解）。个人建议若复习时间不是很多的情况下，前半部分（第一章到第三章前半部分）可以只挑那些重点复习，第三章后半到第五章需要全面复习，第六到七章对寄存器、内存的原理有一个大概的认识即可，不会考的很难。若时间多的话可以先通看一遍，然后根据自己的掌握情况和我上面的建议再巩固一下，如果时间还多的话可以再做做作业错题和历年卷（<s>我的话由于闲得慌，还练习画加法器、触发器之类的简单电路</s>）。</p><p>期末题型的话有填空、选择、化简题、设计题等等（<s>时间久了有点忘了</s>），只要认真复习过的话题目难度真的不大，大部分题目还是可以迎刃而解的，除了最后的设计题要画图有点烦（<s>lz 在最后一题卡了半天，最后瞎画上去，太菜了，但貌似成绩不错？</s>）。</p><p><strong>资源</strong></p><p>理论课：</p><ul><li><a href="https://note.isshikih.top/cour_note/D2QD_DigitalDesign/">修佬的笔记</a>（修佬tql）</li><li><a href="https://note.noughtq.top/hardware/dld/">我的笔记</a></li><li><a href="https://www.cc98.org/topic/5244465">瓜豪gg 的笔记</a>（需校内网访问）</li></ul><p>实验课：</p><ul><li><a href="https://www.yuque.com/xianyuxuan/coding/yfdl75">咸鱼暄xz 的大程</a></li><li><a href="https://www.cc98.org/topic/5794552">98 某位学长的大程分享</a></li></ul><h2 id="短学期课程">短学期课程</h2><h3 id="课程综合实践-I">课程综合实践 I</h3><blockquote><p>虽然这门课算在大二的学分里，但毕竟是大二之前上的课，所以就将它列在这里了。</p></blockquote><ul><li>学分：2.5</li></ul><p>篇幅有些长，因此我单独发了一个<a href="http://blog.noughtq.top/posts/589a8ab1.html">帖子</a>。</p><h2 id="通识课">通识课</h2><h3 id="马克思主义基本原理">马克思主义基本原理</h3><ul><li><p>学分：3.0</p></li><li><p>任课老师：彭双贞</p></li><li><p>教材：《马克思主义基本原理》2023版</p></li><li><p>分数构成：</p><ul><li>平时 50% = 读书报告（2000-3000字）15% + 展示 15% + 个人表现（2次考勤、小测、课堂发言）15% + 教师综合评价 5%（直接送）</li><li>期末 50%，题型：40道选择 + 3道论述题</li></ul></li></ul><p><strong>平时</strong></p><p>和其他思政课一样，我平时把它当作自习课（<s>3节课的时间被我用来做数逻实验</s>），从来没有在课上提问过，从给分来看问题不大。重点关注的是读书报告和小组展示（但也不用特别卷），前者的话认真写，像我没有文采（<s>小学生标题：读《共产党宣言》有感</s>）全是感情的人得分也不错，后者的话保证选题贴近马原、组员积极配合、提前准备展示即可，虽然有一定比例互评的分数，但感觉大家互评都挺善良的，而且我好像没看见哪个组敷衍了事的。小测的话只考了一道大题（考点：马哲的唯物辩证法），开卷，不是很难，尽可能多写点就行。</p><p>而彭双贞老师不仅给分好，人也挺友好的（他的声音让我想到了<a href="https://space.bilibili.com/14229967?spm_id_from=333.337.0.0">一数</a>，让我感到格外亲切），上课经常给到发言的机会，而且他还专门在最后一节课带我们将整本书复习一遍，这一点我感觉非常好。</p><p><strong>期末</strong></p><p>由于是闭卷考试，所以我提前两周就开始复习了。先是根据 psz 老师给出的思维导图（但是旧教材）再将书本上的重点知识圈圈画画（注意：重点复习<strong>马哲</strong>，包括唯物辩证法、认识论和唯物史观，政经和社科考得比较少）。之后本来想再刷点题目的，但是 lz 还要复习其他科目所以做到一半就放弃了（<span class="heimu">其实是懒病犯了</span>）。后来我在刷 98 的时候看到有人自己将教材的重点知识以手抄的形式整理下来，于是我在背完课本一遍后也这么干了，最后赶在开考前一小时抄完了。由于前面的高强度复习，所以考试的时候就比较自信，考到的知识点基本都背过了，大题就写的比较流畅。就我个人感受，题目难度不大（感觉和高中学考政治难度相当），选择有很多材料题，可能需要稍微花点时间理解一下；大题的话还是采取“<strong>知识点 + 材料，分点作答，尽可能写满</strong>”的策略，这样比较好拿分。</p><p>资源：</p><ul><li>psz 老师的思维导图</li><li><a href="https://hggshiwo.github.io/exchelper/index.html#/">刷题网站</a>（我是不太建议做的，因为里面的题目太老太偏了）</li></ul><h3 id="控制论">控制论</h3><ul><li><p>学分：3.0</p></li><li><p>任课老师：宋执环、杨春节、吴俊</p></li><li><p>教材：无</p></li><li><p>分数构成：讨论课 40%（两次主讲 30% + 提问互动 10%）+ 考勤（10%）+ 期末考（50%）</p></li></ul><p>虽然这门课被大家普遍称为“神课”，但我在这门课上取得的成绩很不理想（虽然我自认为付出了不小的努力，这让我第一次感觉到努力错了方向），所以就简单说一下：</p><ul><li>理论课可以不听，但是最好每次都到，因为会有随机的签到（忘记2次还是3次），可以把它当作自习课，但如果是杨春节老师上课的话，可能要当心他的随时提问（<s>你也可以装作不在场，只要没人认识你的话</s>）（但看得出来 ycj 老师更加负责任些）。</li><li>平时的重点是讨论课，整个学期共有两轮：第一轮是随机分组，4-5人一组，每组的同学围绕一个共同的主题做<strong>个人展示</strong>（<s>i人噩梦</s>），每个主题会有一些参考选题，保证组员之间的展示内容不重合；第二轮是真正的个人展示，每位同学有一定的自主选择权，挑选一个主题进行展示，每个主题也会有不同的选题。实际上这两轮都需要同学一个人准备课件并上台展示，没有什么本质区别。展示完后其余同学可以对展示的同学提问，会有加分，最后由其他同学和助教评分。</li><li>期末考试开卷，且考前的理论课和讨论课分别由杨春节老师和助教上复习课，所以考前稍微了解讲过的知识点，以及理解一下重难点（传递函数、劳斯判据等），应该就没有什么大问题了。共有8道大题，时间一定是够的，而且有些题就是历年卷原题，所以不必过于担心。</li></ul><p>lz 反思一下自己得分如此之低的原因：</p><ul><li>我没有主动进行任何提问（我是超级 i 人，连线上都不敢和人说话，几乎没有发过评论（除非有人主动问我））</li><li>第二轮展示与某人的展示内容重叠严重（但我认为是那个人的问题（因为一些原因，这里就不多说了），但我是在他之后展示的，所以感觉吃了很大的亏）</li><li>展示的课件太丑（现在回想起来发现自己好笨）</li><li>期末考试中可能有道题完全理解错了</li><li>…</li></ul><p><span class="heimu">但我还是想不通，明明说是一门事少分多的课，事是不多的，但是分也不多呀（没有人在 dd 群发“谢谢老师”，那么好像不是我一个人的问题了）</span></p><p>资源：</p><ul><li>98 搜一下“控制论”，应该会有很多学长给出的资料（感谢学长们的资料🙏）</li></ul><h3 id="无线网络应用">无线网络应用</h3><blockquote><p>注：只开半个学期（春学期、夏学期均有，但 lz 是春学期的）</p></blockquote><ul><li><p>学分：1.5</p></li><li><p>任课老师：张昱、史笑兴</p></li><li><p>教材：《无线网络应用》第三版，老师自己写的书，其实就是课件的纸质打印版</p></li><li><p>分数构成：</p><ul><li>平时 30% = 线下课堂实验 20%（必做实验 15% + 选做实验 5%） + 线上学习 10%</li><li>期末实验总结 30%（必做实验中的两个小实验要写实验报告）</li><li>在线考试 40% = 平时模块考试 20% + 期末考试 20%</li><li>还要手写心得感受（必做，但好像没算在总分内？）</li></ul></li><li><p>这门课是我认为通识课应有的模样：<strong>课堂氛围轻松而积极，课程知识干货满满，认真学可以收获很多知识，即使摸鱼的话分数也不会太低，而且只要付出应有的努力就能拿到高分</strong>（虽然有正太，但是老师已经尽力地在给我们捞分了）。只要有兴趣，或者决心拿高分，即使不是泛CS专业的同学也可以报名这门课，入门门槛不高，但是要花比其他通识课更多的精力（<s>感觉学的是3分的主课，不愧是“小计网”</s>），所以要做好心理准备。</p></li><li><p>每周的课连着上五个学时，下午两个学时上理论课（<s>lz 上满八周的课，可以确定没有签到，可翘</s>）（中间会有一些提问环节，先答对的同学有加分），晚上三个学时上实验课。重点就是这个实验课，除了每周的必做实验外，还会逐步开放其他四个选做实验。除了第一周外，实验都是按大组（每个大组由三个小组构成，每个小组1-2人）完成的，而且需要每位组员都参与其中才能顺利完成实验（<s>要是碰到大牛的话可以开摆了，可惜我们组就我一个CS专业的，结果我成了支柱</s>），实在不行可以请教老师（脸皮薄的同学避雷 sxx 老师，如果你犯了 sb 错误，他会毫不犹豫地凶你），或者求助其他组的同学（<s>这是我们组经常干的</s>）。不必着急做选做实验，因为最后一周的课专门用来做其他未做的实验，四个实验都在那天做时间上是绰绰有余的。当然选做实验由于没有像必做实验那样在课件上给出实验步骤，所以还得自己查资料学习，有一定的挑战性。</p></li><li><p>还有一个重点是在线学习（可能会占用课后较多的时间）。建议平时就按照老师理论课的进度学习相应的知识，做好相应模块的考试，千万别都堆到最后，否则压力相当之大。由于是在线学习，所以想要拿高分那是比较容易的（doge），但 lz 的分数还是不太高，因为有些细节上的问题可能会有一些出入 + lz 比较笨。通过这个在线学习，我也算收获到不少关于计网的基础知识，对我而言还是很有益处的。</p></li></ul><p>但我认为这门课的设计上还有一些小瑕疵：</p><ul><li>资料杂乱，每周会发一大堆的课件，个人建议可以先将所有课件按类别整理上传好，这样下载的资料不会太乱</li><li>每周一口气连上五个课时，有点让我喘不过气来（<s>虽然可以无视理论课</s>），建议拆成两天上</li><li>感觉这门课应该不止1.5个学分，可以再提一提</li></ul><h3 id="英语短篇小说欣赏">英语短篇小说欣赏</h3><ul><li><p>学分：1.5</p></li><li><p>任课老师：郭国良</p></li><li><p>教材：无</p></li><li><p>分数构成：不清楚</p></li></ul><div class="note orange icon-padding flat"><i class="note-icon fas fa-triangle-exclamation"></i><p>我只推荐英语基础好或者对英语文学很感兴趣的同学报名这门通识课，否则就感觉有点“吃力不讨好”——上课听不进去 + 期末考不出来 + 几乎没有捞分（给分比较求是）。</p></div><p><strong>平时</strong></p><p>前面几周的课由于选课人数还未最终确定，所以 ggl 老师先简单介绍一下英语文学方面的理论知识，之后的话 ggl 老师就正式讲解由他挑选的几篇英语短篇小说，而且到时候座位也会固定下来，方便他上课提问。听说之前是有什么小组合作的，但今年的话可能因为时间原因所以就没有开展。ggl 老师讲解一篇小说大概是按照“知人论世 + 精读词句 + 分析思想情感”的流程进行的，在<strong>精读词句</strong>和<strong>分析思想情感</strong>的时候建议大家在老师发的纸质打印教材上做好笔记，期末考试会派上大用场。课上老师会经常进行提问，根据我的经验老师喜欢提问教室靠墙两边的同学，我坐在中间就从来没被提问过，所以不喜欢回答问题的同学可以在开课前几周占据中间位置，当然积极回答问题的话老师应该会记住你的名字（会有印象分吧）。虽然上到后来我发现自己对英语文学并不是那么感兴趣，但是我对老师提出的一些见解还是挺新颖、挺有意思的，如果不是老师讲解的话我应该是没法读出小说的这一层意思的。</p><p><strong>期末</strong></p><p>期末是开卷考的，可以带任何的纸质资料（包括笔记、词典等）。考前建议还是先熟悉一下之前讲过的小说。考试题型有 10 道翻译题（课外）、单选题（忘记个数了，课内）、10 道判断题（课内）、2 道简答题（课内）和 1 道阅读题（课外），其中除了翻译题外均用英文作答。课内部分如果上课好好听的话应该还是比较容易作答的；课外部分强烈推荐带一本词典，因为有很多六级范围之外的单词。题目量有点大，大多数同学基本写满两个小时的，所以要把握好时间。</p><p><strong>资源</strong></p><ul><li><a href="https://www.cc98.org/topic/5356564">98 上的笔记</a>（可以打印下来带到考场去）</li></ul><h3 id="形势与政策-I">形势与政策 I</h3><ul><li><p>学分：1.0</p></li><li><p>任课老师：赵传贤</p></li><li><p>教材：无</p></li><li><p>分数构成：不太清楚，应该涉及到考勤、平时作业、寒假大作业（15%）和期末考</p></li></ul><p>这门课我不想多说什么：平时的话每节课都要签到（<s>胆大的签完到就run了</s>），课是不用听的，就当自习课好了。课后有时会有作业（8周课共有4次作业），字数800字以上，写出自己的想法 + 正能量即可。寒假大作业可以组队，也可以单兵作战。我选择后者，先想出一个主题，然后搭好提案的框架，写好初稿后让AI润色一下，最后再结合一些折大的具体例子和一些真实感受，花了没几天时间成功水出了一篇报告。期末考前会发资料给大家的，我就考前稍微过了一遍，这就足以应付大多数考题（<s>但是有些题有印象但忘记答案了好难受呀</s>），大题目的话只要三观够正 + 积极靠拢党，分数就不会很低的。</p><h3 id="乒乓球（初级班）">乒乓球（初级班）</h3><ul><li><p>学分：1.0</p></li><li><p>任课老师：陈志强</p></li><li><p>分数构成：<a href="https://www.tyys.zju.edu.cn/redir.php?catalog_id=190545&amp;object_id=191206">戳这</a></p></li></ul><p>上这门课前，我纯纯是一个乒乒球小白，从来没有打过乒乓球（<s>除了颠球能颠1000个以上</s>），所以我纯粹是为了学一门新技能而来的。陈老师是一位非常和蔼慈祥的老师，在练习前尝尝告诫我们要保持良好的作息，很耐心地指导每位同学如何正确接球，当表现不错的时候常常会赢得他的夸赞，这对我的乒乓球学习有很大的激励作用。平时练习的话是两个人一组的，我有幸和一位水平与我旗鼓相当的同学组队，所以练习的时候比较舒服，但是一旦和其他同学PK的时候就被虐成狗了。总的来说乒乓球上手难度并不大，只要坚持下去，平时多练习，期末的专项考核就能够轻松应付。专项考核的内容是一分钟内接球，好像是接球20个算60分，之后每个球算1分，接60个球满分，但是接球分数占70%，剩下30%为技术动作评分，由另一个老师打分，分A+、A、A-、B+等等，具体换算分数我不太清楚。考试共有2次机会，但是动作评分只记第1次的，接球分数取最高分。所以期末考核前需要多练习接发球，找到手感，大部分同学都能拿到不错的分数（第二次考试接球的是一位经验丰富的老师，所以更容易接到球）。</p><h3 id="身体素质课">身体素质课</h3><ul><li>任课老师：董育平</li></ul><p>老师人很好，看起来乐呵呵的，但是训练内容丝毫都不马虎，如果能够按照他的要求完整地练下来，那可是相当地累啊！然而你可以选择像我一样划水（<s>练是跟着练的，但是偷懒少做几个</s>），老师是不会管的，只要不是太过分就行。总之，想要好好锻炼的，<s>或者想要好好划水的</s> 同学都可以来报董老师的课。</p><p><span class="heimu">哈哈再也没有体素课啦！！！</span></p><h2 id="后记">后记</h2><p>我将部分课程的一些资料上传至 <a href="https://github.com/NoughtQ/ZJU-Courses-Resources">Github 仓库</a>，供各位参考~</p><p>本来想花两三天时间写成这篇经验帖，结果花了五天时间（<s>lz 不愧是鸽王啊</s>）。我想通过这种方式，不仅反思我这半年学习过程中好的或不好的表现，总结经验，吸取教训，为之后的学习之旅铺平道路，还能让后辈们少走一些弯路，我觉得这是一件很有意义的事。</p><p>之前有打算将大一一整个学年的学习回忆录放在一起发布，但是由于隔了半年时间，大一秋冬的课程回忆有些残缺了，所以就不放上来了（<s>其实还没开始动笔</s>），如果同学感兴趣的话可以看我的<a href="https://blog.noughtq.top">博客</a>，之后我会陆续补上的。</p><blockquote><p>画一个饼：大概八月中下旬的时候我打算写一篇关于新手CSer的学习建议，作为我这一年CS学习经历的反思，以及没有参加学长组工作的一份补救吧。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 课程回忆录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZJU </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
